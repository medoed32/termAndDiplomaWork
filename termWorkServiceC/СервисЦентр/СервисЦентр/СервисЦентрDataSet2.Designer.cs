//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace СервисЦентр {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("СервисЦентрDataSet2")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class СервисЦентрDataSet2 : global::System.Data.DataSet {
        
        private Вид_НеисправностиDataTable tableВид_Неисправности;
        
        private ДолжностьDataTable tableДолжность;
        
        private ЗаказDataTable tableЗаказ;
        
        private ЗапчастьDataTable tableЗапчасть;
        
        private Обсуживаемый_МагазинDataTable tableОбсуживаемый_Магазин;
        
        private Ремонтируемая_МодельDataTable tableРемонтируемая_Модель;
        
        private СотрудникDataTable tableСотрудник;
        
        private global::System.Data.DataRelation relationFK__Вид_Неисп__Код_З__4316F928;
        
        private global::System.Data.DataRelation relationFK__Вид_Неисп__Код_З__440B1D61;
        
        private global::System.Data.DataRelation relationFK__Вид_Неисп__Код_З__44FF419A;
        
        private global::System.Data.DataRelation relationFK__Вид_Неисп__Код_м__45F365D3;
        
        private global::System.Data.DataRelation relationFK__Заказ__Код_Вида___46E78A0C;
        
        private global::System.Data.DataRelation relationFK__Заказ__Код_Магаз__47DBAE45;
        
        private global::System.Data.DataRelation relationFK__Заказ__Код_Сотру__48CFD27E;
        
        private global::System.Data.DataRelation relationFK__Сотрудник__Код_Д__49C3F6B7;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public СервисЦентрDataSet2() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected СервисЦентрDataSet2(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Вид_Неисправности"] != null)) {
                    base.Tables.Add(new Вид_НеисправностиDataTable(ds.Tables["Вид_Неисправности"]));
                }
                if ((ds.Tables["Должность"] != null)) {
                    base.Tables.Add(new ДолжностьDataTable(ds.Tables["Должность"]));
                }
                if ((ds.Tables["Заказ"] != null)) {
                    base.Tables.Add(new ЗаказDataTable(ds.Tables["Заказ"]));
                }
                if ((ds.Tables["Запчасть"] != null)) {
                    base.Tables.Add(new ЗапчастьDataTable(ds.Tables["Запчасть"]));
                }
                if ((ds.Tables["Обсуживаемый_Магазин"] != null)) {
                    base.Tables.Add(new Обсуживаемый_МагазинDataTable(ds.Tables["Обсуживаемый_Магазин"]));
                }
                if ((ds.Tables["Ремонтируемая_Модель"] != null)) {
                    base.Tables.Add(new Ремонтируемая_МодельDataTable(ds.Tables["Ремонтируемая_Модель"]));
                }
                if ((ds.Tables["Сотрудник"] != null)) {
                    base.Tables.Add(new СотрудникDataTable(ds.Tables["Сотрудник"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Вид_НеисправностиDataTable Вид_Неисправности {
            get {
                return this.tableВид_Неисправности;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ДолжностьDataTable Должность {
            get {
                return this.tableДолжность;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ЗаказDataTable Заказ {
            get {
                return this.tableЗаказ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ЗапчастьDataTable Запчасть {
            get {
                return this.tableЗапчасть;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Обсуживаемый_МагазинDataTable Обсуживаемый_Магазин {
            get {
                return this.tableОбсуживаемый_Магазин;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Ремонтируемая_МодельDataTable Ремонтируемая_Модель {
            get {
                return this.tableРемонтируемая_Модель;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public СотрудникDataTable Сотрудник {
            get {
                return this.tableСотрудник;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            СервисЦентрDataSet2 cln = ((СервисЦентрDataSet2)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Вид_Неисправности"] != null)) {
                    base.Tables.Add(new Вид_НеисправностиDataTable(ds.Tables["Вид_Неисправности"]));
                }
                if ((ds.Tables["Должность"] != null)) {
                    base.Tables.Add(new ДолжностьDataTable(ds.Tables["Должность"]));
                }
                if ((ds.Tables["Заказ"] != null)) {
                    base.Tables.Add(new ЗаказDataTable(ds.Tables["Заказ"]));
                }
                if ((ds.Tables["Запчасть"] != null)) {
                    base.Tables.Add(new ЗапчастьDataTable(ds.Tables["Запчасть"]));
                }
                if ((ds.Tables["Обсуживаемый_Магазин"] != null)) {
                    base.Tables.Add(new Обсуживаемый_МагазинDataTable(ds.Tables["Обсуживаемый_Магазин"]));
                }
                if ((ds.Tables["Ремонтируемая_Модель"] != null)) {
                    base.Tables.Add(new Ремонтируемая_МодельDataTable(ds.Tables["Ремонтируемая_Модель"]));
                }
                if ((ds.Tables["Сотрудник"] != null)) {
                    base.Tables.Add(new СотрудникDataTable(ds.Tables["Сотрудник"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableВид_Неисправности = ((Вид_НеисправностиDataTable)(base.Tables["Вид_Неисправности"]));
            if ((initTable == true)) {
                if ((this.tableВид_Неисправности != null)) {
                    this.tableВид_Неисправности.InitVars();
                }
            }
            this.tableДолжность = ((ДолжностьDataTable)(base.Tables["Должность"]));
            if ((initTable == true)) {
                if ((this.tableДолжность != null)) {
                    this.tableДолжность.InitVars();
                }
            }
            this.tableЗаказ = ((ЗаказDataTable)(base.Tables["Заказ"]));
            if ((initTable == true)) {
                if ((this.tableЗаказ != null)) {
                    this.tableЗаказ.InitVars();
                }
            }
            this.tableЗапчасть = ((ЗапчастьDataTable)(base.Tables["Запчасть"]));
            if ((initTable == true)) {
                if ((this.tableЗапчасть != null)) {
                    this.tableЗапчасть.InitVars();
                }
            }
            this.tableОбсуживаемый_Магазин = ((Обсуживаемый_МагазинDataTable)(base.Tables["Обсуживаемый_Магазин"]));
            if ((initTable == true)) {
                if ((this.tableОбсуживаемый_Магазин != null)) {
                    this.tableОбсуживаемый_Магазин.InitVars();
                }
            }
            this.tableРемонтируемая_Модель = ((Ремонтируемая_МодельDataTable)(base.Tables["Ремонтируемая_Модель"]));
            if ((initTable == true)) {
                if ((this.tableРемонтируемая_Модель != null)) {
                    this.tableРемонтируемая_Модель.InitVars();
                }
            }
            this.tableСотрудник = ((СотрудникDataTable)(base.Tables["Сотрудник"]));
            if ((initTable == true)) {
                if ((this.tableСотрудник != null)) {
                    this.tableСотрудник.InitVars();
                }
            }
            this.relationFK__Вид_Неисп__Код_З__4316F928 = this.Relations["FK__Вид_Неисп__Код_З__4316F928"];
            this.relationFK__Вид_Неисп__Код_З__440B1D61 = this.Relations["FK__Вид_Неисп__Код_З__440B1D61"];
            this.relationFK__Вид_Неисп__Код_З__44FF419A = this.Relations["FK__Вид_Неисп__Код_З__44FF419A"];
            this.relationFK__Вид_Неисп__Код_м__45F365D3 = this.Relations["FK__Вид_Неисп__Код_м__45F365D3"];
            this.relationFK__Заказ__Код_Вида___46E78A0C = this.Relations["FK__Заказ__Код_Вида___46E78A0C"];
            this.relationFK__Заказ__Код_Магаз__47DBAE45 = this.Relations["FK__Заказ__Код_Магаз__47DBAE45"];
            this.relationFK__Заказ__Код_Сотру__48CFD27E = this.Relations["FK__Заказ__Код_Сотру__48CFD27E"];
            this.relationFK__Сотрудник__Код_Д__49C3F6B7 = this.Relations["FK__Сотрудник__Код_Д__49C3F6B7"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "СервисЦентрDataSet2";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/СервисЦентрDataSet2.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableВид_Неисправности = new Вид_НеисправностиDataTable();
            base.Tables.Add(this.tableВид_Неисправности);
            this.tableДолжность = new ДолжностьDataTable();
            base.Tables.Add(this.tableДолжность);
            this.tableЗаказ = new ЗаказDataTable();
            base.Tables.Add(this.tableЗаказ);
            this.tableЗапчасть = new ЗапчастьDataTable();
            base.Tables.Add(this.tableЗапчасть);
            this.tableОбсуживаемый_Магазин = new Обсуживаемый_МагазинDataTable();
            base.Tables.Add(this.tableОбсуживаемый_Магазин);
            this.tableРемонтируемая_Модель = new Ремонтируемая_МодельDataTable();
            base.Tables.Add(this.tableРемонтируемая_Модель);
            this.tableСотрудник = new СотрудникDataTable();
            base.Tables.Add(this.tableСотрудник);
            this.relationFK__Вид_Неисп__Код_З__4316F928 = new global::System.Data.DataRelation("FK__Вид_Неисп__Код_З__4316F928", new global::System.Data.DataColumn[] {
                        this.tableЗапчасть.Код_ЗапчастиColumn}, new global::System.Data.DataColumn[] {
                        this.tableВид_Неисправности.Код_Запчасти_1Column}, false);
            this.Relations.Add(this.relationFK__Вид_Неисп__Код_З__4316F928);
            this.relationFK__Вид_Неисп__Код_З__440B1D61 = new global::System.Data.DataRelation("FK__Вид_Неисп__Код_З__440B1D61", new global::System.Data.DataColumn[] {
                        this.tableЗапчасть.Код_ЗапчастиColumn}, new global::System.Data.DataColumn[] {
                        this.tableВид_Неисправности.Код_Запчасти_2Column}, false);
            this.Relations.Add(this.relationFK__Вид_Неисп__Код_З__440B1D61);
            this.relationFK__Вид_Неисп__Код_З__44FF419A = new global::System.Data.DataRelation("FK__Вид_Неисп__Код_З__44FF419A", new global::System.Data.DataColumn[] {
                        this.tableЗапчасть.Код_ЗапчастиColumn}, new global::System.Data.DataColumn[] {
                        this.tableВид_Неисправности.Код_Запчасти_3Column}, false);
            this.Relations.Add(this.relationFK__Вид_Неисп__Код_З__44FF419A);
            this.relationFK__Вид_Неисп__Код_м__45F365D3 = new global::System.Data.DataRelation("FK__Вид_Неисп__Код_м__45F365D3", new global::System.Data.DataColumn[] {
                        this.tableРемонтируемая_Модель.Код_моделиColumn}, new global::System.Data.DataColumn[] {
                        this.tableВид_Неисправности.Код_моделиColumn}, false);
            this.Relations.Add(this.relationFK__Вид_Неисп__Код_м__45F365D3);
            this.relationFK__Заказ__Код_Вида___46E78A0C = new global::System.Data.DataRelation("FK__Заказ__Код_Вида___46E78A0C", new global::System.Data.DataColumn[] {
                        this.tableВид_Неисправности.Код_Вида_НеисправностиColumn}, new global::System.Data.DataColumn[] {
                        this.tableЗаказ.Код_Вида_НеисправностиColumn}, false);
            this.Relations.Add(this.relationFK__Заказ__Код_Вида___46E78A0C);
            this.relationFK__Заказ__Код_Магаз__47DBAE45 = new global::System.Data.DataRelation("FK__Заказ__Код_Магаз__47DBAE45", new global::System.Data.DataColumn[] {
                        this.tableОбсуживаемый_Магазин.Код_МагазинаColumn}, new global::System.Data.DataColumn[] {
                        this.tableЗаказ.Код_МагазинаColumn}, false);
            this.Relations.Add(this.relationFK__Заказ__Код_Магаз__47DBAE45);
            this.relationFK__Заказ__Код_Сотру__48CFD27E = new global::System.Data.DataRelation("FK__Заказ__Код_Сотру__48CFD27E", new global::System.Data.DataColumn[] {
                        this.tableСотрудник.Код_СотрудникаColumn}, new global::System.Data.DataColumn[] {
                        this.tableЗаказ.Код_СотрудникаColumn}, false);
            this.Relations.Add(this.relationFK__Заказ__Код_Сотру__48CFD27E);
            this.relationFK__Сотрудник__Код_Д__49C3F6B7 = new global::System.Data.DataRelation("FK__Сотрудник__Код_Д__49C3F6B7", new global::System.Data.DataColumn[] {
                        this.tableДолжность.Код_ДолжностиColumn}, new global::System.Data.DataColumn[] {
                        this.tableСотрудник.Код_ДолжностиColumn}, false);
            this.Relations.Add(this.relationFK__Сотрудник__Код_Д__49C3F6B7);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeВид_Неисправности() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeДолжность() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeЗаказ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeЗапчасть() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeОбсуживаемый_Магазин() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeРемонтируемая_Модель() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeСотрудник() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            СервисЦентрDataSet2 ds = new СервисЦентрDataSet2();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void Вид_НеисправностиRowChangeEventHandler(object sender, Вид_НеисправностиRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void ДолжностьRowChangeEventHandler(object sender, ДолжностьRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void ЗаказRowChangeEventHandler(object sender, ЗаказRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void ЗапчастьRowChangeEventHandler(object sender, ЗапчастьRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void Обсуживаемый_МагазинRowChangeEventHandler(object sender, Обсуживаемый_МагазинRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void Ремонтируемая_МодельRowChangeEventHandler(object sender, Ремонтируемая_МодельRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void СотрудникRowChangeEventHandler(object sender, СотрудникRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Вид_НеисправностиDataTable : global::System.Data.TypedTableBase<Вид_НеисправностиRow> {
            
            private global::System.Data.DataColumn columnКод_Вида_Неисправности;
            
            private global::System.Data.DataColumn columnКод_модели;
            
            private global::System.Data.DataColumn columnОписание;
            
            private global::System.Data.DataColumn columnСимптомы;
            
            private global::System.Data.DataColumn columnМетоды_Ремонта;
            
            private global::System.Data.DataColumn columnКод_Запчасти_1;
            
            private global::System.Data.DataColumn columnКод_Запчасти_2;
            
            private global::System.Data.DataColumn columnКод_Запчасти_3;
            
            private global::System.Data.DataColumn columnЦена;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Вид_НеисправностиDataTable() {
                this.TableName = "Вид_Неисправности";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Вид_НеисправностиDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected Вид_НеисправностиDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Код_Вида_НеисправностиColumn {
                get {
                    return this.columnКод_Вида_Неисправности;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Код_моделиColumn {
                get {
                    return this.columnКод_модели;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ОписаниеColumn {
                get {
                    return this.columnОписание;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn СимптомыColumn {
                get {
                    return this.columnСимптомы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Методы_РемонтаColumn {
                get {
                    return this.columnМетоды_Ремонта;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Код_Запчасти_1Column {
                get {
                    return this.columnКод_Запчасти_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Код_Запчасти_2Column {
                get {
                    return this.columnКод_Запчасти_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Код_Запчасти_3Column {
                get {
                    return this.columnКод_Запчасти_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ЦенаColumn {
                get {
                    return this.columnЦена;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Вид_НеисправностиRow this[int index] {
                get {
                    return ((Вид_НеисправностиRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Вид_НеисправностиRowChangeEventHandler Вид_НеисправностиRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Вид_НеисправностиRowChangeEventHandler Вид_НеисправностиRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Вид_НеисправностиRowChangeEventHandler Вид_НеисправностиRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Вид_НеисправностиRowChangeEventHandler Вид_НеисправностиRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddВид_НеисправностиRow(Вид_НеисправностиRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Вид_НеисправностиRow AddВид_НеисправностиRow(Ремонтируемая_МодельRow parentРемонтируемая_МодельRowByFK__Вид_Неисп__Код_м__45F365D3, string Описание, string Симптомы, string Методы_Ремонта, ЗапчастьRow parentЗапчастьRowByFK__Вид_Неисп__Код_З__4316F928, ЗапчастьRow parentЗапчастьRowByFK__Вид_Неисп__Код_З__440B1D61, ЗапчастьRow parentЗапчастьRowByFK__Вид_Неисп__Код_З__44FF419A, decimal Цена) {
                Вид_НеисправностиRow rowВид_НеисправностиRow = ((Вид_НеисправностиRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Описание,
                        Симптомы,
                        Методы_Ремонта,
                        null,
                        null,
                        null,
                        Цена};
                if ((parentРемонтируемая_МодельRowByFK__Вид_Неисп__Код_м__45F365D3 != null)) {
                    columnValuesArray[1] = parentРемонтируемая_МодельRowByFK__Вид_Неисп__Код_м__45F365D3[0];
                }
                if ((parentЗапчастьRowByFK__Вид_Неисп__Код_З__4316F928 != null)) {
                    columnValuesArray[5] = parentЗапчастьRowByFK__Вид_Неисп__Код_З__4316F928[0];
                }
                if ((parentЗапчастьRowByFK__Вид_Неисп__Код_З__440B1D61 != null)) {
                    columnValuesArray[6] = parentЗапчастьRowByFK__Вид_Неисп__Код_З__440B1D61[0];
                }
                if ((parentЗапчастьRowByFK__Вид_Неисп__Код_З__44FF419A != null)) {
                    columnValuesArray[7] = parentЗапчастьRowByFK__Вид_Неисп__Код_З__44FF419A[0];
                }
                rowВид_НеисправностиRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowВид_НеисправностиRow);
                return rowВид_НеисправностиRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Вид_НеисправностиRow FindByКод_Вида_Неисправности(int Код_Вида_Неисправности) {
                return ((Вид_НеисправностиRow)(this.Rows.Find(new object[] {
                            Код_Вида_Неисправности})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Вид_НеисправностиDataTable cln = ((Вид_НеисправностиDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Вид_НеисправностиDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnКод_Вида_Неисправности = base.Columns["Код_Вида_Неисправности"];
                this.columnКод_модели = base.Columns["Код_модели"];
                this.columnОписание = base.Columns["Описание"];
                this.columnСимптомы = base.Columns["Симптомы"];
                this.columnМетоды_Ремонта = base.Columns["Методы_Ремонта"];
                this.columnКод_Запчасти_1 = base.Columns["Код_Запчасти_1"];
                this.columnКод_Запчасти_2 = base.Columns["Код_Запчасти_2"];
                this.columnКод_Запчасти_3 = base.Columns["Код_Запчасти_3"];
                this.columnЦена = base.Columns["Цена"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnКод_Вида_Неисправности = new global::System.Data.DataColumn("Код_Вида_Неисправности", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_Вида_Неисправности);
                this.columnКод_модели = new global::System.Data.DataColumn("Код_модели", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_модели);
                this.columnОписание = new global::System.Data.DataColumn("Описание", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОписание);
                this.columnСимптомы = new global::System.Data.DataColumn("Симптомы", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСимптомы);
                this.columnМетоды_Ремонта = new global::System.Data.DataColumn("Методы_Ремонта", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМетоды_Ремонта);
                this.columnКод_Запчасти_1 = new global::System.Data.DataColumn("Код_Запчасти_1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_Запчасти_1);
                this.columnКод_Запчасти_2 = new global::System.Data.DataColumn("Код_Запчасти_2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_Запчасти_2);
                this.columnКод_Запчасти_3 = new global::System.Data.DataColumn("Код_Запчасти_3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_Запчасти_3);
                this.columnЦена = new global::System.Data.DataColumn("Цена", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЦена);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_Вида_Неисправности}, true));
                this.columnКод_Вида_Неисправности.AutoIncrement = true;
                this.columnКод_Вида_Неисправности.AutoIncrementSeed = -1;
                this.columnКод_Вида_Неисправности.AutoIncrementStep = -1;
                this.columnКод_Вида_Неисправности.AllowDBNull = false;
                this.columnКод_Вида_Неисправности.ReadOnly = true;
                this.columnКод_Вида_Неисправности.Unique = true;
                this.columnКод_модели.AllowDBNull = false;
                this.columnОписание.AllowDBNull = false;
                this.columnОписание.MaxLength = 1000;
                this.columnСимптомы.AllowDBNull = false;
                this.columnСимптомы.MaxLength = 1000;
                this.columnМетоды_Ремонта.AllowDBNull = false;
                this.columnМетоды_Ремонта.MaxLength = 1000;
                this.columnКод_Запчасти_1.AllowDBNull = false;
                this.columnЦена.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Вид_НеисправностиRow NewВид_НеисправностиRow() {
                return ((Вид_НеисправностиRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Вид_НеисправностиRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Вид_НеисправностиRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Вид_НеисправностиRowChanged != null)) {
                    this.Вид_НеисправностиRowChanged(this, new Вид_НеисправностиRowChangeEvent(((Вид_НеисправностиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Вид_НеисправностиRowChanging != null)) {
                    this.Вид_НеисправностиRowChanging(this, new Вид_НеисправностиRowChangeEvent(((Вид_НеисправностиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Вид_НеисправностиRowDeleted != null)) {
                    this.Вид_НеисправностиRowDeleted(this, new Вид_НеисправностиRowChangeEvent(((Вид_НеисправностиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Вид_НеисправностиRowDeleting != null)) {
                    this.Вид_НеисправностиRowDeleting(this, new Вид_НеисправностиRowChangeEvent(((Вид_НеисправностиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveВид_НеисправностиRow(Вид_НеисправностиRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                СервисЦентрDataSet2 ds = new СервисЦентрDataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Вид_НеисправностиDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ДолжностьDataTable : global::System.Data.TypedTableBase<ДолжностьRow> {
            
            private global::System.Data.DataColumn columnКод_Должности;
            
            private global::System.Data.DataColumn columnНаименование_Должности;
            
            private global::System.Data.DataColumn columnОклад;
            
            private global::System.Data.DataColumn columnОбязанности;
            
            private global::System.Data.DataColumn columnТребования;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ДолжностьDataTable() {
                this.TableName = "Должность";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal ДолжностьDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected ДолжностьDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Код_ДолжностиColumn {
                get {
                    return this.columnКод_Должности;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Наименование_ДолжностиColumn {
                get {
                    return this.columnНаименование_Должности;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ОкладColumn {
                get {
                    return this.columnОклад;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ОбязанностиColumn {
                get {
                    return this.columnОбязанности;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ТребованияColumn {
                get {
                    return this.columnТребования;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ДолжностьRow this[int index] {
                get {
                    return ((ДолжностьRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ДолжностьRowChangeEventHandler ДолжностьRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ДолжностьRowChangeEventHandler ДолжностьRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ДолжностьRowChangeEventHandler ДолжностьRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ДолжностьRowChangeEventHandler ДолжностьRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddДолжностьRow(ДолжностьRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ДолжностьRow AddДолжностьRow(string Наименование_Должности, string Оклад, string Обязанности, string Требования) {
                ДолжностьRow rowДолжностьRow = ((ДолжностьRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Наименование_Должности,
                        Оклад,
                        Обязанности,
                        Требования};
                rowДолжностьRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowДолжностьRow);
                return rowДолжностьRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ДолжностьRow FindByКод_Должности(int Код_Должности) {
                return ((ДолжностьRow)(this.Rows.Find(new object[] {
                            Код_Должности})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ДолжностьDataTable cln = ((ДолжностьDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ДолжностьDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnКод_Должности = base.Columns["Код_Должности"];
                this.columnНаименование_Должности = base.Columns["Наименование_Должности"];
                this.columnОклад = base.Columns["Оклад"];
                this.columnОбязанности = base.Columns["Обязанности"];
                this.columnТребования = base.Columns["Требования"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnКод_Должности = new global::System.Data.DataColumn("Код_Должности", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_Должности);
                this.columnНаименование_Должности = new global::System.Data.DataColumn("Наименование_Должности", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование_Должности);
                this.columnОклад = new global::System.Data.DataColumn("Оклад", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОклад);
                this.columnОбязанности = new global::System.Data.DataColumn("Обязанности", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОбязанности);
                this.columnТребования = new global::System.Data.DataColumn("Требования", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТребования);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_Должности}, true));
                this.columnКод_Должности.AutoIncrement = true;
                this.columnКод_Должности.AutoIncrementSeed = -1;
                this.columnКод_Должности.AutoIncrementStep = -1;
                this.columnКод_Должности.AllowDBNull = false;
                this.columnКод_Должности.ReadOnly = true;
                this.columnКод_Должности.Unique = true;
                this.columnНаименование_Должности.AllowDBNull = false;
                this.columnНаименование_Должности.MaxLength = 30;
                this.columnОклад.AllowDBNull = false;
                this.columnОклад.MaxLength = 30;
                this.columnОбязанности.AllowDBNull = false;
                this.columnОбязанности.MaxLength = 1000;
                this.columnТребования.MaxLength = 2000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ДолжностьRow NewДолжностьRow() {
                return ((ДолжностьRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ДолжностьRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ДолжностьRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ДолжностьRowChanged != null)) {
                    this.ДолжностьRowChanged(this, new ДолжностьRowChangeEvent(((ДолжностьRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ДолжностьRowChanging != null)) {
                    this.ДолжностьRowChanging(this, new ДолжностьRowChangeEvent(((ДолжностьRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ДолжностьRowDeleted != null)) {
                    this.ДолжностьRowDeleted(this, new ДолжностьRowChangeEvent(((ДолжностьRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ДолжностьRowDeleting != null)) {
                    this.ДолжностьRowDeleting(this, new ДолжностьRowChangeEvent(((ДолжностьRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveДолжностьRow(ДолжностьRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                СервисЦентрDataSet2 ds = new СервисЦентрDataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ДолжностьDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ЗаказDataTable : global::System.Data.TypedTableBase<ЗаказRow> {
            
            private global::System.Data.DataColumn columnНомер_Заказа;
            
            private global::System.Data.DataColumn columnДата_Заказа;
            
            private global::System.Data.DataColumn columnДата_Возврата;
            
            private global::System.Data.DataColumn columnФамилия_Заказчика;
            
            private global::System.Data.DataColumn columnИмя_Заказчика;
            
            private global::System.Data.DataColumn columnОтчество_Заказчика;
            
            private global::System.Data.DataColumn columnСерийный_Номер;
            
            private global::System.Data.DataColumn columnКод_Вида_Неисправности;
            
            private global::System.Data.DataColumn columnКод_Магазина;
            
            private global::System.Data.DataColumn columnОтметка_О_Гарантии;
            
            private global::System.Data.DataColumn columnСрок_Гарантии_Ремонта;
            
            private global::System.Data.DataColumn columnЦена;
            
            private global::System.Data.DataColumn columnКод_Сотрудника;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗаказDataTable() {
                this.TableName = "Заказ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal ЗаказDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected ЗаказDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Номер_ЗаказаColumn {
                get {
                    return this.columnНомер_Заказа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Дата_ЗаказаColumn {
                get {
                    return this.columnДата_Заказа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Дата_ВозвратаColumn {
                get {
                    return this.columnДата_Возврата;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Фамилия_ЗаказчикаColumn {
                get {
                    return this.columnФамилия_Заказчика;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Имя_ЗаказчикаColumn {
                get {
                    return this.columnИмя_Заказчика;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Отчество_ЗаказчикаColumn {
                get {
                    return this.columnОтчество_Заказчика;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Серийный_НомерColumn {
                get {
                    return this.columnСерийный_Номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Код_Вида_НеисправностиColumn {
                get {
                    return this.columnКод_Вида_Неисправности;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Код_МагазинаColumn {
                get {
                    return this.columnКод_Магазина;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Отметка_О_ГарантииColumn {
                get {
                    return this.columnОтметка_О_Гарантии;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Срок_Гарантии_РемонтаColumn {
                get {
                    return this.columnСрок_Гарантии_Ремонта;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ЦенаColumn {
                get {
                    return this.columnЦена;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Код_СотрудникаColumn {
                get {
                    return this.columnКод_Сотрудника;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗаказRow this[int index] {
                get {
                    return ((ЗаказRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ЗаказRowChangeEventHandler ЗаказRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ЗаказRowChangeEventHandler ЗаказRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ЗаказRowChangeEventHandler ЗаказRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ЗаказRowChangeEventHandler ЗаказRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddЗаказRow(ЗаказRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗаказRow AddЗаказRow(System.DateTime Дата_Заказа, System.DateTime Дата_Возврата, string Фамилия_Заказчика, string Имя_Заказчика, string Отчество_Заказчика, long Серийный_Номер, Вид_НеисправностиRow parentВид_НеисправностиRowByFK__Заказ__Код_Вида___46E78A0C, Обсуживаемый_МагазинRow parentОбсуживаемый_МагазинRowByFK__Заказ__Код_Магаз__47DBAE45, string Отметка_О_Гарантии, System.DateTime Срок_Гарантии_Ремонта, decimal Цена, СотрудникRow parentСотрудникRowByFK__Заказ__Код_Сотру__48CFD27E) {
                ЗаказRow rowЗаказRow = ((ЗаказRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Дата_Заказа,
                        Дата_Возврата,
                        Фамилия_Заказчика,
                        Имя_Заказчика,
                        Отчество_Заказчика,
                        Серийный_Номер,
                        null,
                        null,
                        Отметка_О_Гарантии,
                        Срок_Гарантии_Ремонта,
                        Цена,
                        null};
                if ((parentВид_НеисправностиRowByFK__Заказ__Код_Вида___46E78A0C != null)) {
                    columnValuesArray[7] = parentВид_НеисправностиRowByFK__Заказ__Код_Вида___46E78A0C[0];
                }
                if ((parentОбсуживаемый_МагазинRowByFK__Заказ__Код_Магаз__47DBAE45 != null)) {
                    columnValuesArray[8] = parentОбсуживаемый_МагазинRowByFK__Заказ__Код_Магаз__47DBAE45[0];
                }
                if ((parentСотрудникRowByFK__Заказ__Код_Сотру__48CFD27E != null)) {
                    columnValuesArray[12] = parentСотрудникRowByFK__Заказ__Код_Сотру__48CFD27E[0];
                }
                rowЗаказRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowЗаказRow);
                return rowЗаказRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗаказRow FindByНомер_Заказа(int Номер_Заказа) {
                return ((ЗаказRow)(this.Rows.Find(new object[] {
                            Номер_Заказа})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ЗаказDataTable cln = ((ЗаказDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ЗаказDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnНомер_Заказа = base.Columns["Номер_Заказа"];
                this.columnДата_Заказа = base.Columns["Дата_Заказа"];
                this.columnДата_Возврата = base.Columns["Дата_Возврата"];
                this.columnФамилия_Заказчика = base.Columns["Фамилия_Заказчика"];
                this.columnИмя_Заказчика = base.Columns["Имя_Заказчика"];
                this.columnОтчество_Заказчика = base.Columns["Отчество_Заказчика"];
                this.columnСерийный_Номер = base.Columns["Серийный_Номер"];
                this.columnКод_Вида_Неисправности = base.Columns["Код_Вида_Неисправности"];
                this.columnКод_Магазина = base.Columns["Код_Магазина"];
                this.columnОтметка_О_Гарантии = base.Columns["Отметка_О_Гарантии"];
                this.columnСрок_Гарантии_Ремонта = base.Columns["Срок_Гарантии_Ремонта"];
                this.columnЦена = base.Columns["Цена"];
                this.columnКод_Сотрудника = base.Columns["Код_Сотрудника"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnНомер_Заказа = new global::System.Data.DataColumn("Номер_Заказа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер_Заказа);
                this.columnДата_Заказа = new global::System.Data.DataColumn("Дата_Заказа", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_Заказа);
                this.columnДата_Возврата = new global::System.Data.DataColumn("Дата_Возврата", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_Возврата);
                this.columnФамилия_Заказчика = new global::System.Data.DataColumn("Фамилия_Заказчика", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФамилия_Заказчика);
                this.columnИмя_Заказчика = new global::System.Data.DataColumn("Имя_Заказчика", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИмя_Заказчика);
                this.columnОтчество_Заказчика = new global::System.Data.DataColumn("Отчество_Заказчика", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОтчество_Заказчика);
                this.columnСерийный_Номер = new global::System.Data.DataColumn("Серийный_Номер", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСерийный_Номер);
                this.columnКод_Вида_Неисправности = new global::System.Data.DataColumn("Код_Вида_Неисправности", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_Вида_Неисправности);
                this.columnКод_Магазина = new global::System.Data.DataColumn("Код_Магазина", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_Магазина);
                this.columnОтметка_О_Гарантии = new global::System.Data.DataColumn("Отметка_О_Гарантии", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОтметка_О_Гарантии);
                this.columnСрок_Гарантии_Ремонта = new global::System.Data.DataColumn("Срок_Гарантии_Ремонта", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСрок_Гарантии_Ремонта);
                this.columnЦена = new global::System.Data.DataColumn("Цена", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЦена);
                this.columnКод_Сотрудника = new global::System.Data.DataColumn("Код_Сотрудника", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_Сотрудника);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnНомер_Заказа}, true));
                this.columnНомер_Заказа.AutoIncrement = true;
                this.columnНомер_Заказа.AutoIncrementSeed = -1;
                this.columnНомер_Заказа.AutoIncrementStep = -1;
                this.columnНомер_Заказа.AllowDBNull = false;
                this.columnНомер_Заказа.ReadOnly = true;
                this.columnНомер_Заказа.Unique = true;
                this.columnДата_Заказа.AllowDBNull = false;
                this.columnФамилия_Заказчика.AllowDBNull = false;
                this.columnФамилия_Заказчика.MaxLength = 80;
                this.columnИмя_Заказчика.AllowDBNull = false;
                this.columnИмя_Заказчика.MaxLength = 80;
                this.columnОтчество_Заказчика.AllowDBNull = false;
                this.columnОтчество_Заказчика.MaxLength = 80;
                this.columnСерийный_Номер.AllowDBNull = false;
                this.columnКод_Вида_Неисправности.AllowDBNull = false;
                this.columnКод_Магазина.AllowDBNull = false;
                this.columnОтметка_О_Гарантии.AllowDBNull = false;
                this.columnОтметка_О_Гарантии.MaxLength = 4;
                this.columnЦена.AllowDBNull = false;
                this.columnКод_Сотрудника.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗаказRow NewЗаказRow() {
                return ((ЗаказRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ЗаказRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ЗаказRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ЗаказRowChanged != null)) {
                    this.ЗаказRowChanged(this, new ЗаказRowChangeEvent(((ЗаказRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ЗаказRowChanging != null)) {
                    this.ЗаказRowChanging(this, new ЗаказRowChangeEvent(((ЗаказRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ЗаказRowDeleted != null)) {
                    this.ЗаказRowDeleted(this, new ЗаказRowChangeEvent(((ЗаказRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ЗаказRowDeleting != null)) {
                    this.ЗаказRowDeleting(this, new ЗаказRowChangeEvent(((ЗаказRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveЗаказRow(ЗаказRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                СервисЦентрDataSet2 ds = new СервисЦентрDataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ЗаказDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ЗапчастьDataTable : global::System.Data.TypedTableBase<ЗапчастьRow> {
            
            private global::System.Data.DataColumn columnКод_Запчасти;
            
            private global::System.Data.DataColumn columnНаименование_Запчасти;
            
            private global::System.Data.DataColumn columnФункции;
            
            private global::System.Data.DataColumn columnЦена;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗапчастьDataTable() {
                this.TableName = "Запчасть";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal ЗапчастьDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected ЗапчастьDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Код_ЗапчастиColumn {
                get {
                    return this.columnКод_Запчасти;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Наименование_ЗапчастиColumn {
                get {
                    return this.columnНаименование_Запчасти;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ФункцииColumn {
                get {
                    return this.columnФункции;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ЦенаColumn {
                get {
                    return this.columnЦена;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗапчастьRow this[int index] {
                get {
                    return ((ЗапчастьRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ЗапчастьRowChangeEventHandler ЗапчастьRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ЗапчастьRowChangeEventHandler ЗапчастьRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ЗапчастьRowChangeEventHandler ЗапчастьRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ЗапчастьRowChangeEventHandler ЗапчастьRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddЗапчастьRow(ЗапчастьRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗапчастьRow AddЗапчастьRow(string Наименование_Запчасти, string Функции, decimal Цена) {
                ЗапчастьRow rowЗапчастьRow = ((ЗапчастьRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Наименование_Запчасти,
                        Функции,
                        Цена};
                rowЗапчастьRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowЗапчастьRow);
                return rowЗапчастьRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗапчастьRow FindByКод_Запчасти(int Код_Запчасти) {
                return ((ЗапчастьRow)(this.Rows.Find(new object[] {
                            Код_Запчасти})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ЗапчастьDataTable cln = ((ЗапчастьDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ЗапчастьDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnКод_Запчасти = base.Columns["Код_Запчасти"];
                this.columnНаименование_Запчасти = base.Columns["Наименование_Запчасти"];
                this.columnФункции = base.Columns["Функции"];
                this.columnЦена = base.Columns["Цена"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnКод_Запчасти = new global::System.Data.DataColumn("Код_Запчасти", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_Запчасти);
                this.columnНаименование_Запчасти = new global::System.Data.DataColumn("Наименование_Запчасти", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование_Запчасти);
                this.columnФункции = new global::System.Data.DataColumn("Функции", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФункции);
                this.columnЦена = new global::System.Data.DataColumn("Цена", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЦена);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_Запчасти}, true));
                this.columnКод_Запчасти.AutoIncrement = true;
                this.columnКод_Запчасти.AutoIncrementSeed = -1;
                this.columnКод_Запчасти.AutoIncrementStep = -1;
                this.columnКод_Запчасти.AllowDBNull = false;
                this.columnКод_Запчасти.ReadOnly = true;
                this.columnКод_Запчасти.Unique = true;
                this.columnНаименование_Запчасти.AllowDBNull = false;
                this.columnНаименование_Запчасти.MaxLength = 500;
                this.columnФункции.AllowDBNull = false;
                this.columnФункции.MaxLength = 1000;
                this.columnЦена.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗапчастьRow NewЗапчастьRow() {
                return ((ЗапчастьRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ЗапчастьRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ЗапчастьRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ЗапчастьRowChanged != null)) {
                    this.ЗапчастьRowChanged(this, new ЗапчастьRowChangeEvent(((ЗапчастьRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ЗапчастьRowChanging != null)) {
                    this.ЗапчастьRowChanging(this, new ЗапчастьRowChangeEvent(((ЗапчастьRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ЗапчастьRowDeleted != null)) {
                    this.ЗапчастьRowDeleted(this, new ЗапчастьRowChangeEvent(((ЗапчастьRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ЗапчастьRowDeleting != null)) {
                    this.ЗапчастьRowDeleting(this, new ЗапчастьRowChangeEvent(((ЗапчастьRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveЗапчастьRow(ЗапчастьRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                СервисЦентрDataSet2 ds = new СервисЦентрDataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ЗапчастьDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Обсуживаемый_МагазинDataTable : global::System.Data.TypedTableBase<Обсуживаемый_МагазинRow> {
            
            private global::System.Data.DataColumn columnКод_Магазина;
            
            private global::System.Data.DataColumn columnНаименование;
            
            private global::System.Data.DataColumn columnАдрес;
            
            private global::System.Data.DataColumn columnТелефон_Магазина;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Обсуживаемый_МагазинDataTable() {
                this.TableName = "Обсуживаемый_Магазин";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Обсуживаемый_МагазинDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected Обсуживаемый_МагазинDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Код_МагазинаColumn {
                get {
                    return this.columnКод_Магазина;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn АдресColumn {
                get {
                    return this.columnАдрес;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Телефон_МагазинаColumn {
                get {
                    return this.columnТелефон_Магазина;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Обсуживаемый_МагазинRow this[int index] {
                get {
                    return ((Обсуживаемый_МагазинRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Обсуживаемый_МагазинRowChangeEventHandler Обсуживаемый_МагазинRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Обсуживаемый_МагазинRowChangeEventHandler Обсуживаемый_МагазинRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Обсуживаемый_МагазинRowChangeEventHandler Обсуживаемый_МагазинRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Обсуживаемый_МагазинRowChangeEventHandler Обсуживаемый_МагазинRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddОбсуживаемый_МагазинRow(Обсуживаемый_МагазинRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Обсуживаемый_МагазинRow AddОбсуживаемый_МагазинRow(string Наименование, string Адрес, long Телефон_Магазина) {
                Обсуживаемый_МагазинRow rowОбсуживаемый_МагазинRow = ((Обсуживаемый_МагазинRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Наименование,
                        Адрес,
                        Телефон_Магазина};
                rowОбсуживаемый_МагазинRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowОбсуживаемый_МагазинRow);
                return rowОбсуживаемый_МагазинRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Обсуживаемый_МагазинRow FindByКод_Магазина(int Код_Магазина) {
                return ((Обсуживаемый_МагазинRow)(this.Rows.Find(new object[] {
                            Код_Магазина})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Обсуживаемый_МагазинDataTable cln = ((Обсуживаемый_МагазинDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Обсуживаемый_МагазинDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnКод_Магазина = base.Columns["Код_Магазина"];
                this.columnНаименование = base.Columns["Наименование"];
                this.columnАдрес = base.Columns["Адрес"];
                this.columnТелефон_Магазина = base.Columns["Телефон_Магазина"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnКод_Магазина = new global::System.Data.DataColumn("Код_Магазина", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_Магазина);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.columnАдрес = new global::System.Data.DataColumn("Адрес", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnАдрес);
                this.columnТелефон_Магазина = new global::System.Data.DataColumn("Телефон_Магазина", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТелефон_Магазина);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_Магазина}, true));
                this.columnКод_Магазина.AutoIncrement = true;
                this.columnКод_Магазина.AutoIncrementSeed = -1;
                this.columnКод_Магазина.AutoIncrementStep = -1;
                this.columnКод_Магазина.AllowDBNull = false;
                this.columnКод_Магазина.ReadOnly = true;
                this.columnКод_Магазина.Unique = true;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 50;
                this.columnАдрес.AllowDBNull = false;
                this.columnАдрес.MaxLength = 200;
                this.columnТелефон_Магазина.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Обсуживаемый_МагазинRow NewОбсуживаемый_МагазинRow() {
                return ((Обсуживаемый_МагазинRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Обсуживаемый_МагазинRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Обсуживаемый_МагазинRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Обсуживаемый_МагазинRowChanged != null)) {
                    this.Обсуживаемый_МагазинRowChanged(this, new Обсуживаемый_МагазинRowChangeEvent(((Обсуживаемый_МагазинRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Обсуживаемый_МагазинRowChanging != null)) {
                    this.Обсуживаемый_МагазинRowChanging(this, new Обсуживаемый_МагазинRowChangeEvent(((Обсуживаемый_МагазинRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Обсуживаемый_МагазинRowDeleted != null)) {
                    this.Обсуживаемый_МагазинRowDeleted(this, new Обсуживаемый_МагазинRowChangeEvent(((Обсуживаемый_МагазинRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Обсуживаемый_МагазинRowDeleting != null)) {
                    this.Обсуживаемый_МагазинRowDeleting(this, new Обсуживаемый_МагазинRowChangeEvent(((Обсуживаемый_МагазинRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveОбсуживаемый_МагазинRow(Обсуживаемый_МагазинRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                СервисЦентрDataSet2 ds = new СервисЦентрDataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Обсуживаемый_МагазинDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Ремонтируемая_МодельDataTable : global::System.Data.TypedTableBase<Ремонтируемая_МодельRow> {
            
            private global::System.Data.DataColumn columnКод_модели;
            
            private global::System.Data.DataColumn columnНаименование_Модели;
            
            private global::System.Data.DataColumn columnТип_Модели;
            
            private global::System.Data.DataColumn columnПроизводитель;
            
            private global::System.Data.DataColumn columnТехнические_Характеристики;
            
            private global::System.Data.DataColumn columnОсобенности;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ремонтируемая_МодельDataTable() {
                this.TableName = "Ремонтируемая_Модель";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Ремонтируемая_МодельDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected Ремонтируемая_МодельDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Код_моделиColumn {
                get {
                    return this.columnКод_модели;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Наименование_МоделиColumn {
                get {
                    return this.columnНаименование_Модели;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Тип_МоделиColumn {
                get {
                    return this.columnТип_Модели;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ПроизводительColumn {
                get {
                    return this.columnПроизводитель;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Технические_ХарактеристикиColumn {
                get {
                    return this.columnТехнические_Характеристики;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ОсобенностиColumn {
                get {
                    return this.columnОсобенности;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ремонтируемая_МодельRow this[int index] {
                get {
                    return ((Ремонтируемая_МодельRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ремонтируемая_МодельRowChangeEventHandler Ремонтируемая_МодельRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ремонтируемая_МодельRowChangeEventHandler Ремонтируемая_МодельRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ремонтируемая_МодельRowChangeEventHandler Ремонтируемая_МодельRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event Ремонтируемая_МодельRowChangeEventHandler Ремонтируемая_МодельRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddРемонтируемая_МодельRow(Ремонтируемая_МодельRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ремонтируемая_МодельRow AddРемонтируемая_МодельRow(string Наименование_Модели, string Тип_Модели, string Производитель, string Технические_Характеристики, string Особенности) {
                Ремонтируемая_МодельRow rowРемонтируемая_МодельRow = ((Ремонтируемая_МодельRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Наименование_Модели,
                        Тип_Модели,
                        Производитель,
                        Технические_Характеристики,
                        Особенности};
                rowРемонтируемая_МодельRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowРемонтируемая_МодельRow);
                return rowРемонтируемая_МодельRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ремонтируемая_МодельRow FindByКод_модели(int Код_модели) {
                return ((Ремонтируемая_МодельRow)(this.Rows.Find(new object[] {
                            Код_модели})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Ремонтируемая_МодельDataTable cln = ((Ремонтируемая_МодельDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Ремонтируемая_МодельDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnКод_модели = base.Columns["Код_модели"];
                this.columnНаименование_Модели = base.Columns["Наименование_Модели"];
                this.columnТип_Модели = base.Columns["Тип_Модели"];
                this.columnПроизводитель = base.Columns["Производитель"];
                this.columnТехнические_Характеристики = base.Columns["Технические_Характеристики"];
                this.columnОсобенности = base.Columns["Особенности"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnКод_модели = new global::System.Data.DataColumn("Код_модели", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_модели);
                this.columnНаименование_Модели = new global::System.Data.DataColumn("Наименование_Модели", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование_Модели);
                this.columnТип_Модели = new global::System.Data.DataColumn("Тип_Модели", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТип_Модели);
                this.columnПроизводитель = new global::System.Data.DataColumn("Производитель", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПроизводитель);
                this.columnТехнические_Характеристики = new global::System.Data.DataColumn("Технические_Характеристики", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТехнические_Характеристики);
                this.columnОсобенности = new global::System.Data.DataColumn("Особенности", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОсобенности);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_модели}, true));
                this.columnКод_модели.AutoIncrement = true;
                this.columnКод_модели.AutoIncrementSeed = -1;
                this.columnКод_модели.AutoIncrementStep = -1;
                this.columnКод_модели.AllowDBNull = false;
                this.columnКод_модели.ReadOnly = true;
                this.columnКод_модели.Unique = true;
                this.columnНаименование_Модели.AllowDBNull = false;
                this.columnНаименование_Модели.MaxLength = 500;
                this.columnТип_Модели.AllowDBNull = false;
                this.columnТип_Модели.MaxLength = 100;
                this.columnПроизводитель.AllowDBNull = false;
                this.columnПроизводитель.MaxLength = 80;
                this.columnТехнические_Характеристики.MaxLength = 1000;
                this.columnОсобенности.MaxLength = 2000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ремонтируемая_МодельRow NewРемонтируемая_МодельRow() {
                return ((Ремонтируемая_МодельRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Ремонтируемая_МодельRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Ремонтируемая_МодельRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Ремонтируемая_МодельRowChanged != null)) {
                    this.Ремонтируемая_МодельRowChanged(this, new Ремонтируемая_МодельRowChangeEvent(((Ремонтируемая_МодельRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Ремонтируемая_МодельRowChanging != null)) {
                    this.Ремонтируемая_МодельRowChanging(this, new Ремонтируемая_МодельRowChangeEvent(((Ремонтируемая_МодельRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Ремонтируемая_МодельRowDeleted != null)) {
                    this.Ремонтируемая_МодельRowDeleted(this, new Ремонтируемая_МодельRowChangeEvent(((Ремонтируемая_МодельRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Ремонтируемая_МодельRowDeleting != null)) {
                    this.Ремонтируемая_МодельRowDeleting(this, new Ремонтируемая_МодельRowChangeEvent(((Ремонтируемая_МодельRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveРемонтируемая_МодельRow(Ремонтируемая_МодельRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                СервисЦентрDataSet2 ds = new СервисЦентрDataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Ремонтируемая_МодельDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class СотрудникDataTable : global::System.Data.TypedTableBase<СотрудникRow> {
            
            private global::System.Data.DataColumn columnКод_Сотрудника;
            
            private global::System.Data.DataColumn columnФамилия_Сотрудника;
            
            private global::System.Data.DataColumn columnИмя_Сотрудника;
            
            private global::System.Data.DataColumn columnОтчество_Сотрудника;
            
            private global::System.Data.DataColumn columnВозраст;
            
            private global::System.Data.DataColumn columnПол;
            
            private global::System.Data.DataColumn columnАдрес_Проживания;
            
            private global::System.Data.DataColumn columnТелефон_Сотрудника;
            
            private global::System.Data.DataColumn columnПаспортные_Данные;
            
            private global::System.Data.DataColumn columnКод_Должности;
            
            private global::System.Data.DataColumn columnЛогин;
            
            private global::System.Data.DataColumn columnПароль;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public СотрудникDataTable() {
                this.TableName = "Сотрудник";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal СотрудникDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected СотрудникDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Код_СотрудникаColumn {
                get {
                    return this.columnКод_Сотрудника;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Фамилия_СотрудникаColumn {
                get {
                    return this.columnФамилия_Сотрудника;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Имя_СотрудникаColumn {
                get {
                    return this.columnИмя_Сотрудника;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Отчество_СотрудникаColumn {
                get {
                    return this.columnОтчество_Сотрудника;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ВозрастColumn {
                get {
                    return this.columnВозраст;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ПолColumn {
                get {
                    return this.columnПол;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Адрес_ПроживанияColumn {
                get {
                    return this.columnАдрес_Проживания;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Телефон_СотрудникаColumn {
                get {
                    return this.columnТелефон_Сотрудника;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Паспортные_ДанныеColumn {
                get {
                    return this.columnПаспортные_Данные;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Код_ДолжностиColumn {
                get {
                    return this.columnКод_Должности;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ЛогинColumn {
                get {
                    return this.columnЛогин;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ПарольColumn {
                get {
                    return this.columnПароль;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public СотрудникRow this[int index] {
                get {
                    return ((СотрудникRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event СотрудникRowChangeEventHandler СотрудникRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event СотрудникRowChangeEventHandler СотрудникRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event СотрудникRowChangeEventHandler СотрудникRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event СотрудникRowChangeEventHandler СотрудникRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddСотрудникRow(СотрудникRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public СотрудникRow AddСотрудникRow(string Фамилия_Сотрудника, string Имя_Сотрудника, string Отчество_Сотрудника, int Возраст, string Пол, string Адрес_Проживания, long Телефон_Сотрудника, string Паспортные_Данные, ДолжностьRow parentДолжностьRowByFK__Сотрудник__Код_Д__49C3F6B7, string Логин, string Пароль) {
                СотрудникRow rowСотрудникRow = ((СотрудникRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Фамилия_Сотрудника,
                        Имя_Сотрудника,
                        Отчество_Сотрудника,
                        Возраст,
                        Пол,
                        Адрес_Проживания,
                        Телефон_Сотрудника,
                        Паспортные_Данные,
                        null,
                        Логин,
                        Пароль};
                if ((parentДолжностьRowByFK__Сотрудник__Код_Д__49C3F6B7 != null)) {
                    columnValuesArray[9] = parentДолжностьRowByFK__Сотрудник__Код_Д__49C3F6B7[0];
                }
                rowСотрудникRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowСотрудникRow);
                return rowСотрудникRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public СотрудникRow FindByКод_Сотрудника(int Код_Сотрудника) {
                return ((СотрудникRow)(this.Rows.Find(new object[] {
                            Код_Сотрудника})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                СотрудникDataTable cln = ((СотрудникDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new СотрудникDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnКод_Сотрудника = base.Columns["Код_Сотрудника"];
                this.columnФамилия_Сотрудника = base.Columns["Фамилия_Сотрудника"];
                this.columnИмя_Сотрудника = base.Columns["Имя_Сотрудника"];
                this.columnОтчество_Сотрудника = base.Columns["Отчество_Сотрудника"];
                this.columnВозраст = base.Columns["Возраст"];
                this.columnПол = base.Columns["Пол"];
                this.columnАдрес_Проживания = base.Columns["Адрес_Проживания"];
                this.columnТелефон_Сотрудника = base.Columns["Телефон_Сотрудника"];
                this.columnПаспортные_Данные = base.Columns["Паспортные_Данные"];
                this.columnКод_Должности = base.Columns["Код_Должности"];
                this.columnЛогин = base.Columns["Логин"];
                this.columnПароль = base.Columns["Пароль"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnКод_Сотрудника = new global::System.Data.DataColumn("Код_Сотрудника", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_Сотрудника);
                this.columnФамилия_Сотрудника = new global::System.Data.DataColumn("Фамилия_Сотрудника", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФамилия_Сотрудника);
                this.columnИмя_Сотрудника = new global::System.Data.DataColumn("Имя_Сотрудника", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИмя_Сотрудника);
                this.columnОтчество_Сотрудника = new global::System.Data.DataColumn("Отчество_Сотрудника", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОтчество_Сотрудника);
                this.columnВозраст = new global::System.Data.DataColumn("Возраст", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВозраст);
                this.columnПол = new global::System.Data.DataColumn("Пол", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПол);
                this.columnАдрес_Проживания = new global::System.Data.DataColumn("Адрес_Проживания", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnАдрес_Проживания);
                this.columnТелефон_Сотрудника = new global::System.Data.DataColumn("Телефон_Сотрудника", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТелефон_Сотрудника);
                this.columnПаспортные_Данные = new global::System.Data.DataColumn("Паспортные_Данные", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПаспортные_Данные);
                this.columnКод_Должности = new global::System.Data.DataColumn("Код_Должности", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_Должности);
                this.columnЛогин = new global::System.Data.DataColumn("Логин", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЛогин);
                this.columnПароль = new global::System.Data.DataColumn("Пароль", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПароль);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_Сотрудника}, true));
                this.columnКод_Сотрудника.AutoIncrement = true;
                this.columnКод_Сотрудника.AutoIncrementSeed = -1;
                this.columnКод_Сотрудника.AutoIncrementStep = -1;
                this.columnКод_Сотрудника.AllowDBNull = false;
                this.columnКод_Сотрудника.ReadOnly = true;
                this.columnКод_Сотрудника.Unique = true;
                this.columnФамилия_Сотрудника.AllowDBNull = false;
                this.columnФамилия_Сотрудника.MaxLength = 80;
                this.columnИмя_Сотрудника.AllowDBNull = false;
                this.columnИмя_Сотрудника.MaxLength = 80;
                this.columnОтчество_Сотрудника.AllowDBNull = false;
                this.columnОтчество_Сотрудника.MaxLength = 80;
                this.columnВозраст.AllowDBNull = false;
                this.columnПол.AllowDBNull = false;
                this.columnПол.MaxLength = 1;
                this.columnАдрес_Проживания.AllowDBNull = false;
                this.columnАдрес_Проживания.MaxLength = 1000;
                this.columnТелефон_Сотрудника.AllowDBNull = false;
                this.columnПаспортные_Данные.AllowDBNull = false;
                this.columnПаспортные_Данные.MaxLength = 500;
                this.columnКод_Должности.AllowDBNull = false;
                this.columnЛогин.AllowDBNull = false;
                this.columnЛогин.MaxLength = 80;
                this.columnПароль.AllowDBNull = false;
                this.columnПароль.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public СотрудникRow NewСотрудникRow() {
                return ((СотрудникRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new СотрудникRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(СотрудникRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.СотрудникRowChanged != null)) {
                    this.СотрудникRowChanged(this, new СотрудникRowChangeEvent(((СотрудникRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.СотрудникRowChanging != null)) {
                    this.СотрудникRowChanging(this, new СотрудникRowChangeEvent(((СотрудникRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.СотрудникRowDeleted != null)) {
                    this.СотрудникRowDeleted(this, new СотрудникRowChangeEvent(((СотрудникRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.СотрудникRowDeleting != null)) {
                    this.СотрудникRowDeleting(this, new СотрудникRowChangeEvent(((СотрудникRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveСотрудникRow(СотрудникRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                СервисЦентрDataSet2 ds = new СервисЦентрDataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "СотрудникDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Вид_НеисправностиRow : global::System.Data.DataRow {
            
            private Вид_НеисправностиDataTable tableВид_Неисправности;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Вид_НеисправностиRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableВид_Неисправности = ((Вид_НеисправностиDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код_Вида_Неисправности {
                get {
                    return ((int)(this[this.tableВид_Неисправности.Код_Вида_НеисправностиColumn]));
                }
                set {
                    this[this.tableВид_Неисправности.Код_Вида_НеисправностиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код_модели {
                get {
                    return ((int)(this[this.tableВид_Неисправности.Код_моделиColumn]));
                }
                set {
                    this[this.tableВид_Неисправности.Код_моделиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Описание {
                get {
                    return ((string)(this[this.tableВид_Неисправности.ОписаниеColumn]));
                }
                set {
                    this[this.tableВид_Неисправности.ОписаниеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Симптомы {
                get {
                    return ((string)(this[this.tableВид_Неисправности.СимптомыColumn]));
                }
                set {
                    this[this.tableВид_Неисправности.СимптомыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Методы_Ремонта {
                get {
                    return ((string)(this[this.tableВид_Неисправности.Методы_РемонтаColumn]));
                }
                set {
                    this[this.tableВид_Неисправности.Методы_РемонтаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код_Запчасти_1 {
                get {
                    return ((int)(this[this.tableВид_Неисправности.Код_Запчасти_1Column]));
                }
                set {
                    this[this.tableВид_Неисправности.Код_Запчасти_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код_Запчасти_2 {
                get {
                    try {
                        return ((int)(this[this.tableВид_Неисправности.Код_Запчасти_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Код_Запчасти_2\' в таблице \'Вид_Неисправности\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableВид_Неисправности.Код_Запчасти_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код_Запчасти_3 {
                get {
                    try {
                        return ((int)(this[this.tableВид_Неисправности.Код_Запчасти_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Код_Запчасти_3\' в таблице \'Вид_Неисправности\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableВид_Неисправности.Код_Запчасти_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Цена {
                get {
                    return ((decimal)(this[this.tableВид_Неисправности.ЦенаColumn]));
                }
                set {
                    this[this.tableВид_Неисправности.ЦенаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗапчастьRow ЗапчастьRowByFK__Вид_Неисп__Код_З__4316F928 {
                get {
                    return ((ЗапчастьRow)(this.GetParentRow(this.Table.ParentRelations["FK__Вид_Неисп__Код_З__4316F928"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Вид_Неисп__Код_З__4316F928"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗапчастьRow ЗапчастьRowByFK__Вид_Неисп__Код_З__440B1D61 {
                get {
                    return ((ЗапчастьRow)(this.GetParentRow(this.Table.ParentRelations["FK__Вид_Неисп__Код_З__440B1D61"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Вид_Неисп__Код_З__440B1D61"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗапчастьRow ЗапчастьRowByFK__Вид_Неисп__Код_З__44FF419A {
                get {
                    return ((ЗапчастьRow)(this.GetParentRow(this.Table.ParentRelations["FK__Вид_Неисп__Код_З__44FF419A"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Вид_Неисп__Код_З__44FF419A"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ремонтируемая_МодельRow Ремонтируемая_МодельRow {
                get {
                    return ((Ремонтируемая_МодельRow)(this.GetParentRow(this.Table.ParentRelations["FK__Вид_Неисп__Код_м__45F365D3"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Вид_Неисп__Код_м__45F365D3"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsКод_Запчасти_2Null() {
                return this.IsNull(this.tableВид_Неисправности.Код_Запчасти_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetКод_Запчасти_2Null() {
                this[this.tableВид_Неисправности.Код_Запчасти_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsКод_Запчасти_3Null() {
                return this.IsNull(this.tableВид_Неисправности.Код_Запчасти_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetКод_Запчасти_3Null() {
                this[this.tableВид_Неисправности.Код_Запчасти_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗаказRow[] GetЗаказRows() {
                if ((this.Table.ChildRelations["FK__Заказ__Код_Вида___46E78A0C"] == null)) {
                    return new ЗаказRow[0];
                }
                else {
                    return ((ЗаказRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Заказ__Код_Вида___46E78A0C"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ДолжностьRow : global::System.Data.DataRow {
            
            private ДолжностьDataTable tableДолжность;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal ДолжностьRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableДолжность = ((ДолжностьDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код_Должности {
                get {
                    return ((int)(this[this.tableДолжность.Код_ДолжностиColumn]));
                }
                set {
                    this[this.tableДолжность.Код_ДолжностиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Наименование_Должности {
                get {
                    return ((string)(this[this.tableДолжность.Наименование_ДолжностиColumn]));
                }
                set {
                    this[this.tableДолжность.Наименование_ДолжностиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Оклад {
                get {
                    return ((string)(this[this.tableДолжность.ОкладColumn]));
                }
                set {
                    this[this.tableДолжность.ОкладColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Обязанности {
                get {
                    return ((string)(this[this.tableДолжность.ОбязанностиColumn]));
                }
                set {
                    this[this.tableДолжность.ОбязанностиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Требования {
                get {
                    try {
                        return ((string)(this[this.tableДолжность.ТребованияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Требования\' в таблице \'Должность\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДолжность.ТребованияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsТребованияNull() {
                return this.IsNull(this.tableДолжность.ТребованияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetТребованияNull() {
                this[this.tableДолжность.ТребованияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public СотрудникRow[] GetСотрудникRows() {
                if ((this.Table.ChildRelations["FK__Сотрудник__Код_Д__49C3F6B7"] == null)) {
                    return new СотрудникRow[0];
                }
                else {
                    return ((СотрудникRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Сотрудник__Код_Д__49C3F6B7"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ЗаказRow : global::System.Data.DataRow {
            
            private ЗаказDataTable tableЗаказ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal ЗаказRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableЗаказ = ((ЗаказDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Номер_Заказа {
                get {
                    return ((int)(this[this.tableЗаказ.Номер_ЗаказаColumn]));
                }
                set {
                    this[this.tableЗаказ.Номер_ЗаказаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime Дата_Заказа {
                get {
                    return ((global::System.DateTime)(this[this.tableЗаказ.Дата_ЗаказаColumn]));
                }
                set {
                    this[this.tableЗаказ.Дата_ЗаказаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime Дата_Возврата {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableЗаказ.Дата_ВозвратаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Дата_Возврата\' в таблице \'Заказ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказ.Дата_ВозвратаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Фамилия_Заказчика {
                get {
                    return ((string)(this[this.tableЗаказ.Фамилия_ЗаказчикаColumn]));
                }
                set {
                    this[this.tableЗаказ.Фамилия_ЗаказчикаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Имя_Заказчика {
                get {
                    return ((string)(this[this.tableЗаказ.Имя_ЗаказчикаColumn]));
                }
                set {
                    this[this.tableЗаказ.Имя_ЗаказчикаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Отчество_Заказчика {
                get {
                    return ((string)(this[this.tableЗаказ.Отчество_ЗаказчикаColumn]));
                }
                set {
                    this[this.tableЗаказ.Отчество_ЗаказчикаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long Серийный_Номер {
                get {
                    return ((long)(this[this.tableЗаказ.Серийный_НомерColumn]));
                }
                set {
                    this[this.tableЗаказ.Серийный_НомерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код_Вида_Неисправности {
                get {
                    return ((int)(this[this.tableЗаказ.Код_Вида_НеисправностиColumn]));
                }
                set {
                    this[this.tableЗаказ.Код_Вида_НеисправностиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код_Магазина {
                get {
                    return ((int)(this[this.tableЗаказ.Код_МагазинаColumn]));
                }
                set {
                    this[this.tableЗаказ.Код_МагазинаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Отметка_О_Гарантии {
                get {
                    return ((string)(this[this.tableЗаказ.Отметка_О_ГарантииColumn]));
                }
                set {
                    this[this.tableЗаказ.Отметка_О_ГарантииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime Срок_Гарантии_Ремонта {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableЗаказ.Срок_Гарантии_РемонтаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Срок_Гарантии_Ремонта\' в таблице \'Заказ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказ.Срок_Гарантии_РемонтаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Цена {
                get {
                    return ((decimal)(this[this.tableЗаказ.ЦенаColumn]));
                }
                set {
                    this[this.tableЗаказ.ЦенаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код_Сотрудника {
                get {
                    return ((int)(this[this.tableЗаказ.Код_СотрудникаColumn]));
                }
                set {
                    this[this.tableЗаказ.Код_СотрудникаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Вид_НеисправностиRow Вид_НеисправностиRow {
                get {
                    return ((Вид_НеисправностиRow)(this.GetParentRow(this.Table.ParentRelations["FK__Заказ__Код_Вида___46E78A0C"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Заказ__Код_Вида___46E78A0C"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Обсуживаемый_МагазинRow Обсуживаемый_МагазинRow {
                get {
                    return ((Обсуживаемый_МагазинRow)(this.GetParentRow(this.Table.ParentRelations["FK__Заказ__Код_Магаз__47DBAE45"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Заказ__Код_Магаз__47DBAE45"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public СотрудникRow СотрудникRow {
                get {
                    return ((СотрудникRow)(this.GetParentRow(this.Table.ParentRelations["FK__Заказ__Код_Сотру__48CFD27E"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Заказ__Код_Сотру__48CFD27E"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsДата_ВозвратаNull() {
                return this.IsNull(this.tableЗаказ.Дата_ВозвратаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetДата_ВозвратаNull() {
                this[this.tableЗаказ.Дата_ВозвратаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsСрок_Гарантии_РемонтаNull() {
                return this.IsNull(this.tableЗаказ.Срок_Гарантии_РемонтаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetСрок_Гарантии_РемонтаNull() {
                this[this.tableЗаказ.Срок_Гарантии_РемонтаColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ЗапчастьRow : global::System.Data.DataRow {
            
            private ЗапчастьDataTable tableЗапчасть;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal ЗапчастьRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableЗапчасть = ((ЗапчастьDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код_Запчасти {
                get {
                    return ((int)(this[this.tableЗапчасть.Код_ЗапчастиColumn]));
                }
                set {
                    this[this.tableЗапчасть.Код_ЗапчастиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Наименование_Запчасти {
                get {
                    return ((string)(this[this.tableЗапчасть.Наименование_ЗапчастиColumn]));
                }
                set {
                    this[this.tableЗапчасть.Наименование_ЗапчастиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Функции {
                get {
                    return ((string)(this[this.tableЗапчасть.ФункцииColumn]));
                }
                set {
                    this[this.tableЗапчасть.ФункцииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Цена {
                get {
                    return ((decimal)(this[this.tableЗапчасть.ЦенаColumn]));
                }
                set {
                    this[this.tableЗапчасть.ЦенаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Вид_НеисправностиRow[] GetВид_НеисправностиRowsByFK__Вид_Неисп__Код_З__4316F928() {
                if ((this.Table.ChildRelations["FK__Вид_Неисп__Код_З__4316F928"] == null)) {
                    return new Вид_НеисправностиRow[0];
                }
                else {
                    return ((Вид_НеисправностиRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Вид_Неисп__Код_З__4316F928"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Вид_НеисправностиRow[] GetВид_НеисправностиRowsByFK__Вид_Неисп__Код_З__440B1D61() {
                if ((this.Table.ChildRelations["FK__Вид_Неисп__Код_З__440B1D61"] == null)) {
                    return new Вид_НеисправностиRow[0];
                }
                else {
                    return ((Вид_НеисправностиRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Вид_Неисп__Код_З__440B1D61"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Вид_НеисправностиRow[] GetВид_НеисправностиRowsByFK__Вид_Неисп__Код_З__44FF419A() {
                if ((this.Table.ChildRelations["FK__Вид_Неисп__Код_З__44FF419A"] == null)) {
                    return new Вид_НеисправностиRow[0];
                }
                else {
                    return ((Вид_НеисправностиRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Вид_Неисп__Код_З__44FF419A"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Обсуживаемый_МагазинRow : global::System.Data.DataRow {
            
            private Обсуживаемый_МагазинDataTable tableОбсуживаемый_Магазин;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Обсуживаемый_МагазинRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableОбсуживаемый_Магазин = ((Обсуживаемый_МагазинDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код_Магазина {
                get {
                    return ((int)(this[this.tableОбсуживаемый_Магазин.Код_МагазинаColumn]));
                }
                set {
                    this[this.tableОбсуживаемый_Магазин.Код_МагазинаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableОбсуживаемый_Магазин.НаименованиеColumn]));
                }
                set {
                    this[this.tableОбсуживаемый_Магазин.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Адрес {
                get {
                    return ((string)(this[this.tableОбсуживаемый_Магазин.АдресColumn]));
                }
                set {
                    this[this.tableОбсуживаемый_Магазин.АдресColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long Телефон_Магазина {
                get {
                    return ((long)(this[this.tableОбсуживаемый_Магазин.Телефон_МагазинаColumn]));
                }
                set {
                    this[this.tableОбсуживаемый_Магазин.Телефон_МагазинаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗаказRow[] GetЗаказRows() {
                if ((this.Table.ChildRelations["FK__Заказ__Код_Магаз__47DBAE45"] == null)) {
                    return new ЗаказRow[0];
                }
                else {
                    return ((ЗаказRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Заказ__Код_Магаз__47DBAE45"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Ремонтируемая_МодельRow : global::System.Data.DataRow {
            
            private Ремонтируемая_МодельDataTable tableРемонтируемая_Модель;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal Ремонтируемая_МодельRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableРемонтируемая_Модель = ((Ремонтируемая_МодельDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код_модели {
                get {
                    return ((int)(this[this.tableРемонтируемая_Модель.Код_моделиColumn]));
                }
                set {
                    this[this.tableРемонтируемая_Модель.Код_моделиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Наименование_Модели {
                get {
                    return ((string)(this[this.tableРемонтируемая_Модель.Наименование_МоделиColumn]));
                }
                set {
                    this[this.tableРемонтируемая_Модель.Наименование_МоделиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Тип_Модели {
                get {
                    return ((string)(this[this.tableРемонтируемая_Модель.Тип_МоделиColumn]));
                }
                set {
                    this[this.tableРемонтируемая_Модель.Тип_МоделиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Производитель {
                get {
                    return ((string)(this[this.tableРемонтируемая_Модель.ПроизводительColumn]));
                }
                set {
                    this[this.tableРемонтируемая_Модель.ПроизводительColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Технические_Характеристики {
                get {
                    try {
                        return ((string)(this[this.tableРемонтируемая_Модель.Технические_ХарактеристикиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Технические_Характеристики\' в таблице \'Ремонтируемая_Модель" +
                                "\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРемонтируемая_Модель.Технические_ХарактеристикиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Особенности {
                get {
                    try {
                        return ((string)(this[this.tableРемонтируемая_Модель.ОсобенностиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Особенности\' в таблице \'Ремонтируемая_Модель\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableРемонтируемая_Модель.ОсобенностиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsТехнические_ХарактеристикиNull() {
                return this.IsNull(this.tableРемонтируемая_Модель.Технические_ХарактеристикиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetТехнические_ХарактеристикиNull() {
                this[this.tableРемонтируемая_Модель.Технические_ХарактеристикиColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsОсобенностиNull() {
                return this.IsNull(this.tableРемонтируемая_Модель.ОсобенностиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetОсобенностиNull() {
                this[this.tableРемонтируемая_Модель.ОсобенностиColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Вид_НеисправностиRow[] GetВид_НеисправностиRows() {
                if ((this.Table.ChildRelations["FK__Вид_Неисп__Код_м__45F365D3"] == null)) {
                    return new Вид_НеисправностиRow[0];
                }
                else {
                    return ((Вид_НеисправностиRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Вид_Неисп__Код_м__45F365D3"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class СотрудникRow : global::System.Data.DataRow {
            
            private СотрудникDataTable tableСотрудник;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal СотрудникRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableСотрудник = ((СотрудникDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код_Сотрудника {
                get {
                    return ((int)(this[this.tableСотрудник.Код_СотрудникаColumn]));
                }
                set {
                    this[this.tableСотрудник.Код_СотрудникаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Фамилия_Сотрудника {
                get {
                    return ((string)(this[this.tableСотрудник.Фамилия_СотрудникаColumn]));
                }
                set {
                    this[this.tableСотрудник.Фамилия_СотрудникаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Имя_Сотрудника {
                get {
                    return ((string)(this[this.tableСотрудник.Имя_СотрудникаColumn]));
                }
                set {
                    this[this.tableСотрудник.Имя_СотрудникаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Отчество_Сотрудника {
                get {
                    return ((string)(this[this.tableСотрудник.Отчество_СотрудникаColumn]));
                }
                set {
                    this[this.tableСотрудник.Отчество_СотрудникаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Возраст {
                get {
                    return ((int)(this[this.tableСотрудник.ВозрастColumn]));
                }
                set {
                    this[this.tableСотрудник.ВозрастColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Пол {
                get {
                    return ((string)(this[this.tableСотрудник.ПолColumn]));
                }
                set {
                    this[this.tableСотрудник.ПолColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Адрес_Проживания {
                get {
                    return ((string)(this[this.tableСотрудник.Адрес_ПроживанияColumn]));
                }
                set {
                    this[this.tableСотрудник.Адрес_ПроживанияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long Телефон_Сотрудника {
                get {
                    return ((long)(this[this.tableСотрудник.Телефон_СотрудникаColumn]));
                }
                set {
                    this[this.tableСотрудник.Телефон_СотрудникаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Паспортные_Данные {
                get {
                    return ((string)(this[this.tableСотрудник.Паспортные_ДанныеColumn]));
                }
                set {
                    this[this.tableСотрудник.Паспортные_ДанныеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Код_Должности {
                get {
                    return ((int)(this[this.tableСотрудник.Код_ДолжностиColumn]));
                }
                set {
                    this[this.tableСотрудник.Код_ДолжностиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Логин {
                get {
                    return ((string)(this[this.tableСотрудник.ЛогинColumn]));
                }
                set {
                    this[this.tableСотрудник.ЛогинColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Пароль {
                get {
                    return ((string)(this[this.tableСотрудник.ПарольColumn]));
                }
                set {
                    this[this.tableСотрудник.ПарольColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ДолжностьRow ДолжностьRow {
                get {
                    return ((ДолжностьRow)(this.GetParentRow(this.Table.ParentRelations["FK__Сотрудник__Код_Д__49C3F6B7"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Сотрудник__Код_Д__49C3F6B7"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗаказRow[] GetЗаказRows() {
                if ((this.Table.ChildRelations["FK__Заказ__Код_Сотру__48CFD27E"] == null)) {
                    return new ЗаказRow[0];
                }
                else {
                    return ((ЗаказRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Заказ__Код_Сотру__48CFD27E"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class Вид_НеисправностиRowChangeEvent : global::System.EventArgs {
            
            private Вид_НеисправностиRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Вид_НеисправностиRowChangeEvent(Вид_НеисправностиRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Вид_НеисправностиRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class ДолжностьRowChangeEvent : global::System.EventArgs {
            
            private ДолжностьRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ДолжностьRowChangeEvent(ДолжностьRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ДолжностьRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class ЗаказRowChangeEvent : global::System.EventArgs {
            
            private ЗаказRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗаказRowChangeEvent(ЗаказRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗаказRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class ЗапчастьRowChangeEvent : global::System.EventArgs {
            
            private ЗапчастьRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗапчастьRowChangeEvent(ЗапчастьRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ЗапчастьRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class Обсуживаемый_МагазинRowChangeEvent : global::System.EventArgs {
            
            private Обсуживаемый_МагазинRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Обсуживаемый_МагазинRowChangeEvent(Обсуживаемый_МагазинRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Обсуживаемый_МагазинRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class Ремонтируемая_МодельRowChangeEvent : global::System.EventArgs {
            
            private Ремонтируемая_МодельRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ремонтируемая_МодельRowChangeEvent(Ремонтируемая_МодельRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public Ремонтируемая_МодельRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class СотрудникRowChangeEvent : global::System.EventArgs {
            
            private СотрудникRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public СотрудникRowChangeEvent(СотрудникRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public СотрудникRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace СервисЦентр.СервисЦентрDataSet2TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Вид_НеисправностиTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public Вид_НеисправностиTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Вид_Неисправности";
            tableMapping.ColumnMappings.Add("Код_Вида_Неисправности", "Код_Вида_Неисправности");
            tableMapping.ColumnMappings.Add("Код_модели", "Код_модели");
            tableMapping.ColumnMappings.Add("Описание", "Описание");
            tableMapping.ColumnMappings.Add("Симптомы", "Симптомы");
            tableMapping.ColumnMappings.Add("Методы_Ремонта", "Методы_Ремонта");
            tableMapping.ColumnMappings.Add("Код_Запчасти_1", "Код_Запчасти_1");
            tableMapping.ColumnMappings.Add("Код_Запчасти_2", "Код_Запчасти_2");
            tableMapping.ColumnMappings.Add("Код_Запчасти_3", "Код_Запчасти_3");
            tableMapping.ColumnMappings.Add("Цена", "Цена");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Вид_Неисправности] WHERE (([Код_Вида_Неисправности] = @Original_Код_Вида_Неисправности) AND ([Код_модели] = @Original_Код_модели) AND ([Описание] = @Original_Описание) AND ([Симптомы] = @Original_Симптомы) AND ([Методы_Ремонта] = @Original_Методы_Ремонта) AND ([Код_Запчасти_1] = @Original_Код_Запчасти_1) AND ((@IsNull_Код_Запчасти_2 = 1 AND [Код_Запчасти_2] IS NULL) OR ([Код_Запчасти_2] = @Original_Код_Запчасти_2)) AND ((@IsNull_Код_Запчасти_3 = 1 AND [Код_Запчасти_3] IS NULL) OR ([Код_Запчасти_3] = @Original_Код_Запчасти_3)) AND ([Цена] = @Original_Цена))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Вида_Неисправности", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Вида_Неисправности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_модели", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_модели", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Описание", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Описание", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Симптомы", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Симптомы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Методы_Ремонта", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Методы_Ремонта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Запчасти_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Код_Запчасти_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти_2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Запчасти_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти_2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Код_Запчасти_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти_3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Запчасти_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти_3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Вид_Неисправности] ([Код_модели], [Описание], [Симптомы], [Методы_Ремонта], [Код_Запчасти_1], [Код_Запчасти_2], [Код_Запчасти_3], [Цена]) VALUES (@Код_модели, @Описание, @Симптомы, @Методы_Ремонта, @Код_Запчасти_1, @Код_Запчасти_2, @Код_Запчасти_3, @Цена);
SELECT Код_Вида_Неисправности, Код_модели, Описание, Симптомы, Методы_Ремонта, Код_Запчасти_1, Код_Запчасти_2, Код_Запчасти_3, Цена FROM Вид_Неисправности WHERE (Код_Вида_Неисправности = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_модели", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_модели", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Описание", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Описание", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Симптомы", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Симптомы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Методы_Ремонта", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Методы_Ремонта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Запчасти_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Запчасти_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Запчасти_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Вид_Неисправности] SET [Код_модели] = @Код_модели, [Описание] = @Описание, [Симптомы] = @Симптомы, [Методы_Ремонта] = @Методы_Ремонта, [Код_Запчасти_1] = @Код_Запчасти_1, [Код_Запчасти_2] = @Код_Запчасти_2, [Код_Запчасти_3] = @Код_Запчасти_3, [Цена] = @Цена WHERE (([Код_Вида_Неисправности] = @Original_Код_Вида_Неисправности) AND ([Код_модели] = @Original_Код_модели) AND ([Описание] = @Original_Описание) AND ([Симптомы] = @Original_Симптомы) AND ([Методы_Ремонта] = @Original_Методы_Ремонта) AND ([Код_Запчасти_1] = @Original_Код_Запчасти_1) AND ((@IsNull_Код_Запчасти_2 = 1 AND [Код_Запчасти_2] IS NULL) OR ([Код_Запчасти_2] = @Original_Код_Запчасти_2)) AND ((@IsNull_Код_Запчасти_3 = 1 AND [Код_Запчасти_3] IS NULL) OR ([Код_Запчасти_3] = @Original_Код_Запчасти_3)) AND ([Цена] = @Original_Цена));
SELECT Код_Вида_Неисправности, Код_модели, Описание, Симптомы, Методы_Ремонта, Код_Запчасти_1, Код_Запчасти_2, Код_Запчасти_3, Цена FROM Вид_Неисправности WHERE (Код_Вида_Неисправности = @Код_Вида_Неисправности)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_модели", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_модели", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Описание", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Описание", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Симптомы", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Симптомы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Методы_Ремонта", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Методы_Ремонта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Запчасти_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Запчасти_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Запчасти_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти_3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Вида_Неисправности", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Вида_Неисправности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_модели", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_модели", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Описание", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Описание", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Симптомы", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Симптомы", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Методы_Ремонта", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Методы_Ремонта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Запчасти_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Код_Запчасти_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти_2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Запчасти_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти_2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Код_Запчасти_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти_3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Запчасти_3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти_3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Вида_Неисправности", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Вида_Неисправности", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::СервисЦентр.Properties.Settings.Default.СервисЦентрConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_Вида_Неисправности, Код_модели, Описание, Симптомы, Методы_Ремонта, Ко" +
                "д_Запчасти_1, Код_Запчасти_2, Код_Запчасти_3, Цена FROM dbo.Вид_Неисправности";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(СервисЦентрDataSet2.Вид_НеисправностиDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual СервисЦентрDataSet2.Вид_НеисправностиDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            СервисЦентрDataSet2.Вид_НеисправностиDataTable dataTable = new СервисЦентрDataSet2.Вид_НеисправностиDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(СервисЦентрDataSet2.Вид_НеисправностиDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(СервисЦентрDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "Вид_Неисправности");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_Вида_Неисправности, int Original_Код_модели, string Original_Описание, string Original_Симптомы, string Original_Методы_Ремонта, int Original_Код_Запчасти_1, global::System.Nullable<int> Original_Код_Запчасти_2, global::System.Nullable<int> Original_Код_Запчасти_3, decimal Original_Цена) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_Вида_Неисправности));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Код_модели));
            if ((Original_Описание == null)) {
                throw new global::System.ArgumentNullException("Original_Описание");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Описание));
            }
            if ((Original_Симптомы == null)) {
                throw new global::System.ArgumentNullException("Original_Симптомы");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Симптомы));
            }
            if ((Original_Методы_Ремонта == null)) {
                throw new global::System.ArgumentNullException("Original_Методы_Ремонта");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Методы_Ремонта));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_Код_Запчасти_1));
            if ((Original_Код_Запчасти_2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_Код_Запчасти_2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_Код_Запчасти_3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_Код_Запчасти_3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_Цена));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Код_модели, string Описание, string Симптомы, string Методы_Ремонта, int Код_Запчасти_1, global::System.Nullable<int> Код_Запчасти_2, global::System.Nullable<int> Код_Запчасти_3, decimal Цена) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Код_модели));
            if ((Описание == null)) {
                throw new global::System.ArgumentNullException("Описание");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Описание));
            }
            if ((Симптомы == null)) {
                throw new global::System.ArgumentNullException("Симптомы");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Симптомы));
            }
            if ((Методы_Ремонта == null)) {
                throw new global::System.ArgumentNullException("Методы_Ремонта");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Методы_Ремонта));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Код_Запчасти_1));
            if ((Код_Запчасти_2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Код_Запчасти_2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Код_Запчасти_3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Код_Запчасти_3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(Цена));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Код_модели, 
                    string Описание, 
                    string Симптомы, 
                    string Методы_Ремонта, 
                    int Код_Запчасти_1, 
                    global::System.Nullable<int> Код_Запчасти_2, 
                    global::System.Nullable<int> Код_Запчасти_3, 
                    decimal Цена, 
                    int Original_Код_Вида_Неисправности, 
                    int Original_Код_модели, 
                    string Original_Описание, 
                    string Original_Симптомы, 
                    string Original_Методы_Ремонта, 
                    int Original_Код_Запчасти_1, 
                    global::System.Nullable<int> Original_Код_Запчасти_2, 
                    global::System.Nullable<int> Original_Код_Запчасти_3, 
                    decimal Original_Цена, 
                    int Код_Вида_Неисправности) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Код_модели));
            if ((Описание == null)) {
                throw new global::System.ArgumentNullException("Описание");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Описание));
            }
            if ((Симптомы == null)) {
                throw new global::System.ArgumentNullException("Симптомы");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Симптомы));
            }
            if ((Методы_Ремонта == null)) {
                throw new global::System.ArgumentNullException("Методы_Ремонта");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Методы_Ремонта));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Код_Запчасти_1));
            if ((Код_Запчасти_2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Код_Запчасти_2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Код_Запчасти_3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Код_Запчасти_3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Цена));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Код_Вида_Неисправности));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Код_модели));
            if ((Original_Описание == null)) {
                throw new global::System.ArgumentNullException("Original_Описание");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Описание));
            }
            if ((Original_Симптомы == null)) {
                throw new global::System.ArgumentNullException("Original_Симптомы");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Симптомы));
            }
            if ((Original_Методы_Ремонта == null)) {
                throw new global::System.ArgumentNullException("Original_Методы_Ремонта");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Методы_Ремонта));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_Код_Запчасти_1));
            if ((Original_Код_Запчасти_2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_Код_Запчасти_2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Код_Запчасти_3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_Код_Запчасти_3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_Цена));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Код_Вида_Неисправности));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Код_модели, 
                    string Описание, 
                    string Симптомы, 
                    string Методы_Ремонта, 
                    int Код_Запчасти_1, 
                    global::System.Nullable<int> Код_Запчасти_2, 
                    global::System.Nullable<int> Код_Запчасти_3, 
                    decimal Цена, 
                    int Original_Код_Вида_Неисправности, 
                    int Original_Код_модели, 
                    string Original_Описание, 
                    string Original_Симптомы, 
                    string Original_Методы_Ремонта, 
                    int Original_Код_Запчасти_1, 
                    global::System.Nullable<int> Original_Код_Запчасти_2, 
                    global::System.Nullable<int> Original_Код_Запчасти_3, 
                    decimal Original_Цена) {
            return this.Update(Код_модели, Описание, Симптомы, Методы_Ремонта, Код_Запчасти_1, Код_Запчасти_2, Код_Запчасти_3, Цена, Original_Код_Вида_Неисправности, Original_Код_модели, Original_Описание, Original_Симптомы, Original_Методы_Ремонта, Original_Код_Запчасти_1, Original_Код_Запчасти_2, Original_Код_Запчасти_3, Original_Цена, Original_Код_Вида_Неисправности);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ДолжностьTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public ДолжностьTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Должность";
            tableMapping.ColumnMappings.Add("Код_Должности", "Код_Должности");
            tableMapping.ColumnMappings.Add("Наименование_Должности", "Наименование_Должности");
            tableMapping.ColumnMappings.Add("Оклад", "Оклад");
            tableMapping.ColumnMappings.Add("Обязанности", "Обязанности");
            tableMapping.ColumnMappings.Add("Требования", "Требования");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Должность] WHERE (([Код_Должности] = @Original_Код_Должности) AND ([Наименование_Должности] = @Original_Наименование_Должности) AND ([Оклад] = @Original_Оклад) AND ([Обязанности] = @Original_Обязанности) AND ((@IsNull_Требования = 1 AND [Требования] IS NULL) OR ([Требования] = @Original_Требования)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Должности", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Должности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование_Должности", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_Должности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Оклад", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Оклад", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Обязанности", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Обязанности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Требования", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Требования", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Требования", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Требования", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Должность] ([Наименование_Должности], [Оклад], [Обязанности], [Требования]) VALUES (@Наименование_Должности, @Оклад, @Обязанности, @Требования);
SELECT Код_Должности, Наименование_Должности, Оклад, Обязанности, Требования FROM Должность WHERE (Код_Должности = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование_Должности", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_Должности", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Оклад", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Оклад", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Обязанности", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Обязанности", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Требования", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Требования", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Должность] SET [Наименование_Должности] = @Наименование_Должности, [Оклад] = @Оклад, [Обязанности] = @Обязанности, [Требования] = @Требования WHERE (([Код_Должности] = @Original_Код_Должности) AND ([Наименование_Должности] = @Original_Наименование_Должности) AND ([Оклад] = @Original_Оклад) AND ([Обязанности] = @Original_Обязанности) AND ((@IsNull_Требования = 1 AND [Требования] IS NULL) OR ([Требования] = @Original_Требования)));
SELECT Код_Должности, Наименование_Должности, Оклад, Обязанности, Требования FROM Должность WHERE (Код_Должности = @Код_Должности)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование_Должности", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_Должности", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Оклад", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Оклад", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Обязанности", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Обязанности", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Требования", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Требования", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Должности", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Должности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование_Должности", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_Должности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Оклад", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Оклад", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Обязанности", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Обязанности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Требования", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Требования", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Требования", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Требования", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Должности", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Должности", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::СервисЦентр.Properties.Settings.Default.СервисЦентрConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_Должности, Наименование_Должности, Оклад, Обязанности, Требования FROM" +
                " dbo.Должность";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(СервисЦентрDataSet2.ДолжностьDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual СервисЦентрDataSet2.ДолжностьDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            СервисЦентрDataSet2.ДолжностьDataTable dataTable = new СервисЦентрDataSet2.ДолжностьDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(СервисЦентрDataSet2.ДолжностьDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(СервисЦентрDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "Должность");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_Должности, string Original_Наименование_Должности, string Original_Оклад, string Original_Обязанности, string Original_Требования) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_Должности));
            if ((Original_Наименование_Должности == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование_Должности");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Наименование_Должности));
            }
            if ((Original_Оклад == null)) {
                throw new global::System.ArgumentNullException("Original_Оклад");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Оклад));
            }
            if ((Original_Обязанности == null)) {
                throw new global::System.ArgumentNullException("Original_Обязанности");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Обязанности));
            }
            if ((Original_Требования == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Требования));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Наименование_Должности, string Оклад, string Обязанности, string Требования) {
            if ((Наименование_Должности == null)) {
                throw new global::System.ArgumentNullException("Наименование_Должности");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Наименование_Должности));
            }
            if ((Оклад == null)) {
                throw new global::System.ArgumentNullException("Оклад");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Оклад));
            }
            if ((Обязанности == null)) {
                throw new global::System.ArgumentNullException("Обязанности");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Обязанности));
            }
            if ((Требования == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Требования));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование_Должности, string Оклад, string Обязанности, string Требования, int Original_Код_Должности, string Original_Наименование_Должности, string Original_Оклад, string Original_Обязанности, string Original_Требования, int Код_Должности) {
            if ((Наименование_Должности == null)) {
                throw new global::System.ArgumentNullException("Наименование_Должности");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Наименование_Должности));
            }
            if ((Оклад == null)) {
                throw new global::System.ArgumentNullException("Оклад");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Оклад));
            }
            if ((Обязанности == null)) {
                throw new global::System.ArgumentNullException("Обязанности");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Обязанности));
            }
            if ((Требования == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Требования));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Код_Должности));
            if ((Original_Наименование_Должности == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование_Должности");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Наименование_Должности));
            }
            if ((Original_Оклад == null)) {
                throw new global::System.ArgumentNullException("Original_Оклад");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Оклад));
            }
            if ((Original_Обязанности == null)) {
                throw new global::System.ArgumentNullException("Original_Обязанности");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Обязанности));
            }
            if ((Original_Требования == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Требования));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Код_Должности));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование_Должности, string Оклад, string Обязанности, string Требования, int Original_Код_Должности, string Original_Наименование_Должности, string Original_Оклад, string Original_Обязанности, string Original_Требования) {
            return this.Update(Наименование_Должности, Оклад, Обязанности, Требования, Original_Код_Должности, Original_Наименование_Должности, Original_Оклад, Original_Обязанности, Original_Требования, Original_Код_Должности);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ЗаказTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public ЗаказTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Заказ";
            tableMapping.ColumnMappings.Add("Номер_Заказа", "Номер_Заказа");
            tableMapping.ColumnMappings.Add("Дата_Заказа", "Дата_Заказа");
            tableMapping.ColumnMappings.Add("Дата_Возврата", "Дата_Возврата");
            tableMapping.ColumnMappings.Add("Фамилия_Заказчика", "Фамилия_Заказчика");
            tableMapping.ColumnMappings.Add("Имя_Заказчика", "Имя_Заказчика");
            tableMapping.ColumnMappings.Add("Отчество_Заказчика", "Отчество_Заказчика");
            tableMapping.ColumnMappings.Add("Серийный_Номер", "Серийный_Номер");
            tableMapping.ColumnMappings.Add("Код_Вида_Неисправности", "Код_Вида_Неисправности");
            tableMapping.ColumnMappings.Add("Код_Магазина", "Код_Магазина");
            tableMapping.ColumnMappings.Add("Отметка_О_Гарантии", "Отметка_О_Гарантии");
            tableMapping.ColumnMappings.Add("Срок_Гарантии_Ремонта", "Срок_Гарантии_Ремонта");
            tableMapping.ColumnMappings.Add("Цена", "Цена");
            tableMapping.ColumnMappings.Add("Код_Сотрудника", "Код_Сотрудника");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Заказ] WHERE (([Номер_Заказа] = @Original_Номер_Заказа) AND ([Дата_Заказа] = @Original_Дата_Заказа) AND ((@IsNull_Дата_Возврата = 1 AND [Дата_Возврата] IS NULL) OR ([Дата_Возврата] = @Original_Дата_Возврата)) AND ([Фамилия_Заказчика] = @Original_Фамилия_Заказчика) AND ([Имя_Заказчика] = @Original_Имя_Заказчика) AND ([Отчество_Заказчика] = @Original_Отчество_Заказчика) AND ([Серийный_Номер] = @Original_Серийный_Номер) AND ([Код_Вида_Неисправности] = @Original_Код_Вида_Неисправности) AND ([Код_Магазина] = @Original_Код_Магазина) AND ([Отметка_О_Гарантии] = @Original_Отметка_О_Гарантии) AND ((@IsNull_Срок_Гарантии_Ремонта = 1 AND [Срок_Гарантии_Ремонта] IS NULL) OR ([Срок_Гарантии_Ремонта] = @Original_Срок_Гарантии_Ремонта)) AND ([Цена] = @Original_Цена) AND ([Код_Сотрудника] = @Original_Код_Сотрудника))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Номер_Заказа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_Заказа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_Заказа", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_Заказа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_Возврата", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_Возврата", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_Возврата", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_Возврата", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Фамилия_Заказчика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_Заказчика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Имя_Заказчика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_Заказчика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Отчество_Заказчика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_Заказчика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Серийный_Номер", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Серийный_Номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Вида_Неисправности", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Вида_Неисправности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Магазина", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Магазина", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Отметка_О_Гарантии", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отметка_О_Гарантии", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Срок_Гарантии_Ремонта", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Срок_Гарантии_Ремонта", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Срок_Гарантии_Ремонта", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Срок_Гарантии_Ремонта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Сотрудника", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Заказ] ([Дата_Заказа], [Дата_Возврата], [Фамилия_Заказчика], [Имя_Заказчика], [Отчество_Заказчика], [Серийный_Номер], [Код_Вида_Неисправности], [Код_Магазина], [Отметка_О_Гарантии], [Срок_Гарантии_Ремонта], [Цена], [Код_Сотрудника]) VALUES (@Дата_Заказа, @Дата_Возврата, @Фамилия_Заказчика, @Имя_Заказчика, @Отчество_Заказчика, @Серийный_Номер, @Код_Вида_Неисправности, @Код_Магазина, @Отметка_О_Гарантии, @Срок_Гарантии_Ремонта, @Цена, @Код_Сотрудника);
SELECT Номер_Заказа, Дата_Заказа, Дата_Возврата, Фамилия_Заказчика, Имя_Заказчика, Отчество_Заказчика, Серийный_Номер, Код_Вида_Неисправности, Код_Магазина, Отметка_О_Гарантии, Срок_Гарантии_Ремонта, Цена, Код_Сотрудника FROM Заказ WHERE (Номер_Заказа = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_Заказа", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_Заказа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_Возврата", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_Возврата", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Фамилия_Заказчика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_Заказчика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Имя_Заказчика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_Заказчика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Отчество_Заказчика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_Заказчика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Серийный_Номер", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Серийный_Номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Вида_Неисправности", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Вида_Неисправности", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Магазина", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Магазина", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Отметка_О_Гарантии", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отметка_О_Гарантии", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Срок_Гарантии_Ремонта", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Срок_Гарантии_Ремонта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Сотрудника", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Заказ] SET [Дата_Заказа] = @Дата_Заказа, [Дата_Возврата] = @Дата_Во" +
                "зврата, [Фамилия_Заказчика] = @Фамилия_Заказчика, [Имя_Заказчика] = @Имя_Заказчи" +
                "ка, [Отчество_Заказчика] = @Отчество_Заказчика, [Серийный_Номер] = @Серийный_Ном" +
                "ер, [Код_Вида_Неисправности] = @Код_Вида_Неисправности, [Код_Магазина] = @Код_Ма" +
                "газина, [Отметка_О_Гарантии] = @Отметка_О_Гарантии, [Срок_Гарантии_Ремонта] = @С" +
                "рок_Гарантии_Ремонта, [Цена] = @Цена, [Код_Сотрудника] = @Код_Сотрудника WHERE (" +
                "([Номер_Заказа] = @Original_Номер_Заказа) AND ([Дата_Заказа] = @Original_Дата_За" +
                "каза) AND ((@IsNull_Дата_Возврата = 1 AND [Дата_Возврата] IS NULL) OR ([Дата_Воз" +
                "врата] = @Original_Дата_Возврата)) AND ([Фамилия_Заказчика] = @Original_Фамилия_" +
                "Заказчика) AND ([Имя_Заказчика] = @Original_Имя_Заказчика) AND ([Отчество_Заказч" +
                "ика] = @Original_Отчество_Заказчика) AND ([Серийный_Номер] = @Original_Серийный_" +
                "Номер) AND ([Код_Вида_Неисправности] = @Original_Код_Вида_Неисправности) AND ([К" +
                "од_Магазина] = @Original_Код_Магазина) AND ([Отметка_О_Гарантии] = @Original_Отм" +
                "етка_О_Гарантии) AND ((@IsNull_Срок_Гарантии_Ремонта = 1 AND [Срок_Гарантии_Ремо" +
                "нта] IS NULL) OR ([Срок_Гарантии_Ремонта] = @Original_Срок_Гарантии_Ремонта)) AN" +
                "D ([Цена] = @Original_Цена) AND ([Код_Сотрудника] = @Original_Код_Сотрудника));\r" +
                "\nSELECT Номер_Заказа, Дата_Заказа, Дата_Возврата, Фамилия_Заказчика, Имя_Заказчи" +
                "ка, Отчество_Заказчика, Серийный_Номер, Код_Вида_Неисправности, Код_Магазина, От" +
                "метка_О_Гарантии, Срок_Гарантии_Ремонта, Цена, Код_Сотрудника FROM Заказ WHERE (" +
                "Номер_Заказа = @Номер_Заказа)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_Заказа", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_Заказа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_Возврата", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_Возврата", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Фамилия_Заказчика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_Заказчика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Имя_Заказчика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_Заказчика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Отчество_Заказчика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_Заказчика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Серийный_Номер", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Серийный_Номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Вида_Неисправности", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Вида_Неисправности", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Магазина", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Магазина", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Отметка_О_Гарантии", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отметка_О_Гарантии", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Срок_Гарантии_Ремонта", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Срок_Гарантии_Ремонта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Сотрудника", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Номер_Заказа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_Заказа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_Заказа", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_Заказа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Дата_Возврата", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_Возврата", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_Возврата", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_Возврата", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Фамилия_Заказчика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_Заказчика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Имя_Заказчика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_Заказчика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Отчество_Заказчика", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_Заказчика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Серийный_Номер", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Серийный_Номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Вида_Неисправности", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Вида_Неисправности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Магазина", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Магазина", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Отметка_О_Гарантии", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отметка_О_Гарантии", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Срок_Гарантии_Ремонта", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Срок_Гарантии_Ремонта", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Срок_Гарантии_Ремонта", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Срок_Гарантии_Ремонта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Сотрудника", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Номер_Заказа", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_Заказа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::СервисЦентр.Properties.Settings.Default.СервисЦентрConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Номер_Заказа, Дата_Заказа, Дата_Возврата, Фамилия_Заказчика, Имя_Заказчика" +
                ", Отчество_Заказчика, Серийный_Номер, Код_Вида_Неисправности, Код_Магазина, Отме" +
                "тка_О_Гарантии, Срок_Гарантии_Ремонта, Цена, Код_Сотрудника FROM dbo.Заказ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(СервисЦентрDataSet2.ЗаказDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual СервисЦентрDataSet2.ЗаказDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            СервисЦентрDataSet2.ЗаказDataTable dataTable = new СервисЦентрDataSet2.ЗаказDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(СервисЦентрDataSet2.ЗаказDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(СервисЦентрDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "Заказ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Номер_Заказа, System.DateTime Original_Дата_Заказа, global::System.Nullable<global::System.DateTime> Original_Дата_Возврата, string Original_Фамилия_Заказчика, string Original_Имя_Заказчика, string Original_Отчество_Заказчика, long Original_Серийный_Номер, int Original_Код_Вида_Неисправности, int Original_Код_Магазина, string Original_Отметка_О_Гарантии, global::System.Nullable<global::System.DateTime> Original_Срок_Гарантии_Ремонта, decimal Original_Цена, int Original_Код_Сотрудника) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Номер_Заказа));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_Дата_Заказа));
            if ((Original_Дата_Возврата.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_Дата_Возврата.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_Фамилия_Заказчика == null)) {
                throw new global::System.ArgumentNullException("Original_Фамилия_Заказчика");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Фамилия_Заказчика));
            }
            if ((Original_Имя_Заказчика == null)) {
                throw new global::System.ArgumentNullException("Original_Имя_Заказчика");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Имя_Заказчика));
            }
            if ((Original_Отчество_Заказчика == null)) {
                throw new global::System.ArgumentNullException("Original_Отчество_Заказчика");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Отчество_Заказчика));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((long)(Original_Серийный_Номер));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Код_Вида_Неисправности));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_Код_Магазина));
            if ((Original_Отметка_О_Гарантии == null)) {
                throw new global::System.ArgumentNullException("Original_Отметка_О_Гарантии");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Отметка_О_Гарантии));
            }
            if ((Original_Срок_Гарантии_Ремонта.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_Срок_Гарантии_Ремонта.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_Цена));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_Код_Сотрудника));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Дата_Заказа, global::System.Nullable<global::System.DateTime> Дата_Возврата, string Фамилия_Заказчика, string Имя_Заказчика, string Отчество_Заказчика, long Серийный_Номер, int Код_Вида_Неисправности, int Код_Магазина, string Отметка_О_Гарантии, global::System.Nullable<global::System.DateTime> Срок_Гарантии_Ремонта, decimal Цена, int Код_Сотрудника) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Дата_Заказа));
            if ((Дата_Возврата.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Дата_Возврата.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Фамилия_Заказчика == null)) {
                throw new global::System.ArgumentNullException("Фамилия_Заказчика");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Фамилия_Заказчика));
            }
            if ((Имя_Заказчика == null)) {
                throw new global::System.ArgumentNullException("Имя_Заказчика");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Имя_Заказчика));
            }
            if ((Отчество_Заказчика == null)) {
                throw new global::System.ArgumentNullException("Отчество_Заказчика");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Отчество_Заказчика));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((long)(Серийный_Номер));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Код_Вида_Неисправности));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Код_Магазина));
            if ((Отметка_О_Гарантии == null)) {
                throw new global::System.ArgumentNullException("Отметка_О_Гарантии");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Отметка_О_Гарантии));
            }
            if ((Срок_Гарантии_Ремонта.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(Срок_Гарантии_Ремонта.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(Цена));
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(Код_Сотрудника));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime Дата_Заказа, 
                    global::System.Nullable<global::System.DateTime> Дата_Возврата, 
                    string Фамилия_Заказчика, 
                    string Имя_Заказчика, 
                    string Отчество_Заказчика, 
                    long Серийный_Номер, 
                    int Код_Вида_Неисправности, 
                    int Код_Магазина, 
                    string Отметка_О_Гарантии, 
                    global::System.Nullable<global::System.DateTime> Срок_Гарантии_Ремонта, 
                    decimal Цена, 
                    int Код_Сотрудника, 
                    int Original_Номер_Заказа, 
                    System.DateTime Original_Дата_Заказа, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_Возврата, 
                    string Original_Фамилия_Заказчика, 
                    string Original_Имя_Заказчика, 
                    string Original_Отчество_Заказчика, 
                    long Original_Серийный_Номер, 
                    int Original_Код_Вида_Неисправности, 
                    int Original_Код_Магазина, 
                    string Original_Отметка_О_Гарантии, 
                    global::System.Nullable<global::System.DateTime> Original_Срок_Гарантии_Ремонта, 
                    decimal Original_Цена, 
                    int Original_Код_Сотрудника, 
                    int Номер_Заказа) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Дата_Заказа));
            if ((Дата_Возврата.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Дата_Возврата.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Фамилия_Заказчика == null)) {
                throw new global::System.ArgumentNullException("Фамилия_Заказчика");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Фамилия_Заказчика));
            }
            if ((Имя_Заказчика == null)) {
                throw new global::System.ArgumentNullException("Имя_Заказчика");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Имя_Заказчика));
            }
            if ((Отчество_Заказчика == null)) {
                throw new global::System.ArgumentNullException("Отчество_Заказчика");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Отчество_Заказчика));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(Серийный_Номер));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Код_Вида_Неисправности));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Код_Магазина));
            if ((Отметка_О_Гарантии == null)) {
                throw new global::System.ArgumentNullException("Отметка_О_Гарантии");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Отметка_О_Гарантии));
            }
            if ((Срок_Гарантии_Ремонта.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Срок_Гарантии_Ремонта.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Цена));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Код_Сотрудника));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_Номер_Заказа));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_Дата_Заказа));
            if ((Original_Дата_Возврата.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_Дата_Возврата.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Фамилия_Заказчика == null)) {
                throw new global::System.ArgumentNullException("Original_Фамилия_Заказчика");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Фамилия_Заказчика));
            }
            if ((Original_Имя_Заказчика == null)) {
                throw new global::System.ArgumentNullException("Original_Имя_Заказчика");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Имя_Заказчика));
            }
            if ((Original_Отчество_Заказчика == null)) {
                throw new global::System.ArgumentNullException("Original_Отчество_Заказчика");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Отчество_Заказчика));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((long)(Original_Серийный_Номер));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_Код_Вида_Неисправности));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_Код_Магазина));
            if ((Original_Отметка_О_Гарантии == null)) {
                throw new global::System.ArgumentNullException("Original_Отметка_О_Гарантии");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Отметка_О_Гарантии));
            }
            if ((Original_Срок_Гарантии_Ремонта.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_Срок_Гарантии_Ремонта.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(Original_Цена));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_Код_Сотрудника));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Номер_Заказа));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime Дата_Заказа, 
                    global::System.Nullable<global::System.DateTime> Дата_Возврата, 
                    string Фамилия_Заказчика, 
                    string Имя_Заказчика, 
                    string Отчество_Заказчика, 
                    long Серийный_Номер, 
                    int Код_Вида_Неисправности, 
                    int Код_Магазина, 
                    string Отметка_О_Гарантии, 
                    global::System.Nullable<global::System.DateTime> Срок_Гарантии_Ремонта, 
                    decimal Цена, 
                    int Код_Сотрудника, 
                    int Original_Номер_Заказа, 
                    System.DateTime Original_Дата_Заказа, 
                    global::System.Nullable<global::System.DateTime> Original_Дата_Возврата, 
                    string Original_Фамилия_Заказчика, 
                    string Original_Имя_Заказчика, 
                    string Original_Отчество_Заказчика, 
                    long Original_Серийный_Номер, 
                    int Original_Код_Вида_Неисправности, 
                    int Original_Код_Магазина, 
                    string Original_Отметка_О_Гарантии, 
                    global::System.Nullable<global::System.DateTime> Original_Срок_Гарантии_Ремонта, 
                    decimal Original_Цена, 
                    int Original_Код_Сотрудника) {
            return this.Update(Дата_Заказа, Дата_Возврата, Фамилия_Заказчика, Имя_Заказчика, Отчество_Заказчика, Серийный_Номер, Код_Вида_Неисправности, Код_Магазина, Отметка_О_Гарантии, Срок_Гарантии_Ремонта, Цена, Код_Сотрудника, Original_Номер_Заказа, Original_Дата_Заказа, Original_Дата_Возврата, Original_Фамилия_Заказчика, Original_Имя_Заказчика, Original_Отчество_Заказчика, Original_Серийный_Номер, Original_Код_Вида_Неисправности, Original_Код_Магазина, Original_Отметка_О_Гарантии, Original_Срок_Гарантии_Ремонта, Original_Цена, Original_Код_Сотрудника, Original_Номер_Заказа);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ЗапчастьTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public ЗапчастьTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Запчасть";
            tableMapping.ColumnMappings.Add("Код_Запчасти", "Код_Запчасти");
            tableMapping.ColumnMappings.Add("Наименование_Запчасти", "Наименование_Запчасти");
            tableMapping.ColumnMappings.Add("Функции", "Функции");
            tableMapping.ColumnMappings.Add("Цена", "Цена");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Запчасть] WHERE (([Код_Запчасти] = @Original_Код_Запчасти) AND" +
                " ([Наименование_Запчасти] = @Original_Наименование_Запчасти) AND ([Функции] = @O" +
                "riginal_Функции) AND ([Цена] = @Original_Цена))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Запчасти", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование_Запчасти", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_Запчасти", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Функции", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Функции", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Запчасть] ([Наименование_Запчасти], [Функции], [Цена]) VALUES " +
                "(@Наименование_Запчасти, @Функции, @Цена);\r\nSELECT Код_Запчасти, Наименование_За" +
                "пчасти, Функции, Цена FROM Запчасть WHERE (Код_Запчасти = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование_Запчасти", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_Запчасти", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Функции", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Функции", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Запчасть] SET [Наименование_Запчасти] = @Наименование_Запчасти, [Функции] = @Функции, [Цена] = @Цена WHERE (([Код_Запчасти] = @Original_Код_Запчасти) AND ([Наименование_Запчасти] = @Original_Наименование_Запчасти) AND ([Функции] = @Original_Функции) AND ([Цена] = @Original_Цена));
SELECT Код_Запчасти, Наименование_Запчасти, Функции, Цена FROM Запчасть WHERE (Код_Запчасти = @Код_Запчасти)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование_Запчасти", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_Запчасти", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Функции", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Функции", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Запчасти", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование_Запчасти", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_Запчасти", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Функции", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Функции", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Запчасти", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Запчасти", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::СервисЦентр.Properties.Settings.Default.СервисЦентрConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_Запчасти, Наименование_Запчасти, Функции, Цена FROM dbo.Запчасть";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(СервисЦентрDataSet2.ЗапчастьDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual СервисЦентрDataSet2.ЗапчастьDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            СервисЦентрDataSet2.ЗапчастьDataTable dataTable = new СервисЦентрDataSet2.ЗапчастьDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(СервисЦентрDataSet2.ЗапчастьDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(СервисЦентрDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "Запчасть");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_Запчасти, string Original_Наименование_Запчасти, string Original_Функции, decimal Original_Цена) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_Запчасти));
            if ((Original_Наименование_Запчасти == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование_Запчасти");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Наименование_Запчасти));
            }
            if ((Original_Функции == null)) {
                throw new global::System.ArgumentNullException("Original_Функции");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Функции));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_Цена));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Наименование_Запчасти, string Функции, decimal Цена) {
            if ((Наименование_Запчасти == null)) {
                throw new global::System.ArgumentNullException("Наименование_Запчасти");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Наименование_Запчасти));
            }
            if ((Функции == null)) {
                throw new global::System.ArgumentNullException("Функции");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Функции));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Цена));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование_Запчасти, string Функции, decimal Цена, int Original_Код_Запчасти, string Original_Наименование_Запчасти, string Original_Функции, decimal Original_Цена, int Код_Запчасти) {
            if ((Наименование_Запчасти == null)) {
                throw new global::System.ArgumentNullException("Наименование_Запчасти");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Наименование_Запчасти));
            }
            if ((Функции == null)) {
                throw new global::System.ArgumentNullException("Функции");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Функции));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Цена));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_Код_Запчасти));
            if ((Original_Наименование_Запчасти == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование_Запчасти");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Наименование_Запчасти));
            }
            if ((Original_Функции == null)) {
                throw new global::System.ArgumentNullException("Original_Функции");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Функции));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_Цена));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Код_Запчасти));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование_Запчасти, string Функции, decimal Цена, int Original_Код_Запчасти, string Original_Наименование_Запчасти, string Original_Функции, decimal Original_Цена) {
            return this.Update(Наименование_Запчасти, Функции, Цена, Original_Код_Запчасти, Original_Наименование_Запчасти, Original_Функции, Original_Цена, Original_Код_Запчасти);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Обсуживаемый_МагазинTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public Обсуживаемый_МагазинTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Обсуживаемый_Магазин";
            tableMapping.ColumnMappings.Add("Код_Магазина", "Код_Магазина");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            tableMapping.ColumnMappings.Add("Адрес", "Адрес");
            tableMapping.ColumnMappings.Add("Телефон_Магазина", "Телефон_Магазина");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Обсуживаемый_Магазин] WHERE (([Код_Магазина] = @Original_Код_М" +
                "агазина) AND ([Наименование] = @Original_Наименование) AND ([Адрес] = @Original_" +
                "Адрес) AND ([Телефон_Магазина] = @Original_Телефон_Магазина))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Магазина", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Магазина", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Адрес", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Телефон_Магазина", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_Магазина", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Обсуживаемый_Магазин] ([Наименование], [Адрес], [Телефон_Магазина]) VALUES (@Наименование, @Адрес, @Телефон_Магазина);
SELECT Код_Магазина, Наименование, Адрес, Телефон_Магазина FROM Обсуживаемый_Магазин WHERE (Код_Магазина = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Адрес", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Телефон_Магазина", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_Магазина", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Обсуживаемый_Магазин] SET [Наименование] = @Наименование, [Адрес] = @Адрес, [Телефон_Магазина] = @Телефон_Магазина WHERE (([Код_Магазина] = @Original_Код_Магазина) AND ([Наименование] = @Original_Наименование) AND ([Адрес] = @Original_Адрес) AND ([Телефон_Магазина] = @Original_Телефон_Магазина));
SELECT Код_Магазина, Наименование, Адрес, Телефон_Магазина FROM Обсуживаемый_Магазин WHERE (Код_Магазина = @Код_Магазина)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Адрес", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Телефон_Магазина", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_Магазина", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Магазина", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Магазина", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Адрес", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Телефон_Магазина", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_Магазина", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Магазина", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Магазина", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::СервисЦентр.Properties.Settings.Default.СервисЦентрConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_Магазина, Наименование, Адрес, Телефон_Магазина FROM dbo.Обсуживаемый_" +
                "Магазин";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(СервисЦентрDataSet2.Обсуживаемый_МагазинDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual СервисЦентрDataSet2.Обсуживаемый_МагазинDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            СервисЦентрDataSet2.Обсуживаемый_МагазинDataTable dataTable = new СервисЦентрDataSet2.Обсуживаемый_МагазинDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(СервисЦентрDataSet2.Обсуживаемый_МагазинDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(СервисЦентрDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "Обсуживаемый_Магазин");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_Магазина, string Original_Наименование, string Original_Адрес, long Original_Телефон_Магазина) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_Магазина));
            if ((Original_Наименование == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Наименование));
            }
            if ((Original_Адрес == null)) {
                throw new global::System.ArgumentNullException("Original_Адрес");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Адрес));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((long)(Original_Телефон_Магазина));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Наименование, string Адрес, long Телефон_Магазина) {
            if ((Наименование == null)) {
                throw new global::System.ArgumentNullException("Наименование");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Наименование));
            }
            if ((Адрес == null)) {
                throw new global::System.ArgumentNullException("Адрес");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Адрес));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((long)(Телефон_Магазина));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование, string Адрес, long Телефон_Магазина, int Original_Код_Магазина, string Original_Наименование, string Original_Адрес, long Original_Телефон_Магазина, int Код_Магазина) {
            if ((Наименование == null)) {
                throw new global::System.ArgumentNullException("Наименование");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Наименование));
            }
            if ((Адрес == null)) {
                throw new global::System.ArgumentNullException("Адрес");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Адрес));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(Телефон_Магазина));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_Код_Магазина));
            if ((Original_Наименование == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Наименование));
            }
            if ((Original_Адрес == null)) {
                throw new global::System.ArgumentNullException("Original_Адрес");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Адрес));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(Original_Телефон_Магазина));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Код_Магазина));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование, string Адрес, long Телефон_Магазина, int Original_Код_Магазина, string Original_Наименование, string Original_Адрес, long Original_Телефон_Магазина) {
            return this.Update(Наименование, Адрес, Телефон_Магазина, Original_Код_Магазина, Original_Наименование, Original_Адрес, Original_Телефон_Магазина, Original_Код_Магазина);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Ремонтируемая_МодельTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public Ремонтируемая_МодельTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Ремонтируемая_Модель";
            tableMapping.ColumnMappings.Add("Код_модели", "Код_модели");
            tableMapping.ColumnMappings.Add("Наименование_Модели", "Наименование_Модели");
            tableMapping.ColumnMappings.Add("Тип_Модели", "Тип_Модели");
            tableMapping.ColumnMappings.Add("Производитель", "Производитель");
            tableMapping.ColumnMappings.Add("Технические_Характеристики", "Технические_Характеристики");
            tableMapping.ColumnMappings.Add("Особенности", "Особенности");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Ремонтируемая_Модель] WHERE (([Код_модели] = @Original_Код_модели) AND ([Наименование_Модели] = @Original_Наименование_Модели) AND ([Тип_Модели] = @Original_Тип_Модели) AND ([Производитель] = @Original_Производитель) AND ((@IsNull_Технические_Характеристики = 1 AND [Технические_Характеристики] IS NULL) OR ([Технические_Характеристики] = @Original_Технические_Характеристики)) AND ((@IsNull_Особенности = 1 AND [Особенности] IS NULL) OR ([Особенности] = @Original_Особенности)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_модели", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_модели", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование_Модели", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_Модели", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Тип_Модели", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип_Модели", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Производитель", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Производитель", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Технические_Характеристики", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Технические_Характеристики", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Технические_Характеристики", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Технические_Характеристики", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Особенности", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Особенности", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Особенности", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Особенности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Ремонтируемая_Модель] ([Наименование_Модели], [Тип_Модели], [Производитель], [Технические_Характеристики], [Особенности]) VALUES (@Наименование_Модели, @Тип_Модели, @Производитель, @Технические_Характеристики, @Особенности);
SELECT Код_модели, Наименование_Модели, Тип_Модели, Производитель, Технические_Характеристики, Особенности FROM Ремонтируемая_Модель WHERE (Код_модели = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование_Модели", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_Модели", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Тип_Модели", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип_Модели", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Производитель", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Производитель", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Технические_Характеристики", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Технические_Характеристики", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Особенности", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Особенности", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Ремонтируемая_Модель] SET [Наименование_Модели] = @Наименование_Модели, [Тип_Модели] = @Тип_Модели, [Производитель] = @Производитель, [Технические_Характеристики] = @Технические_Характеристики, [Особенности] = @Особенности WHERE (([Код_модели] = @Original_Код_модели) AND ([Наименование_Модели] = @Original_Наименование_Модели) AND ([Тип_Модели] = @Original_Тип_Модели) AND ([Производитель] = @Original_Производитель) AND ((@IsNull_Технические_Характеристики = 1 AND [Технические_Характеристики] IS NULL) OR ([Технические_Характеристики] = @Original_Технические_Характеристики)) AND ((@IsNull_Особенности = 1 AND [Особенности] IS NULL) OR ([Особенности] = @Original_Особенности)));
SELECT Код_модели, Наименование_Модели, Тип_Модели, Производитель, Технические_Характеристики, Особенности FROM Ремонтируемая_Модель WHERE (Код_модели = @Код_модели)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование_Модели", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_Модели", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Тип_Модели", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип_Модели", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Производитель", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Производитель", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Технические_Характеристики", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Технические_Характеристики", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Особенности", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Особенности", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_модели", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_модели", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование_Модели", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_Модели", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Тип_Модели", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип_Модели", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Производитель", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Производитель", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Технические_Характеристики", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Технические_Характеристики", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Технические_Характеристики", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Технические_Характеристики", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Особенности", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Особенности", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Особенности", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Особенности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_модели", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Код_модели", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::СервисЦентр.Properties.Settings.Default.СервисЦентрConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_модели, Наименование_Модели, Тип_Модели, Производитель, Технические_Ха" +
                "рактеристики, Особенности FROM dbo.Ремонтируемая_Модель";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(СервисЦентрDataSet2.Ремонтируемая_МодельDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual СервисЦентрDataSet2.Ремонтируемая_МодельDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            СервисЦентрDataSet2.Ремонтируемая_МодельDataTable dataTable = new СервисЦентрDataSet2.Ремонтируемая_МодельDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(СервисЦентрDataSet2.Ремонтируемая_МодельDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(СервисЦентрDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "Ремонтируемая_Модель");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_модели, string Original_Наименование_Модели, string Original_Тип_Модели, string Original_Производитель, string Original_Технические_Характеристики, string Original_Особенности) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_модели));
            if ((Original_Наименование_Модели == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование_Модели");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Наименование_Модели));
            }
            if ((Original_Тип_Модели == null)) {
                throw new global::System.ArgumentNullException("Original_Тип_Модели");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Тип_Модели));
            }
            if ((Original_Производитель == null)) {
                throw new global::System.ArgumentNullException("Original_Производитель");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Производитель));
            }
            if ((Original_Технические_Характеристики == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Технические_Характеристики));
            }
            if ((Original_Особенности == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Особенности));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Наименование_Модели, string Тип_Модели, string Производитель, string Технические_Характеристики, string Особенности) {
            if ((Наименование_Модели == null)) {
                throw new global::System.ArgumentNullException("Наименование_Модели");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Наименование_Модели));
            }
            if ((Тип_Модели == null)) {
                throw new global::System.ArgumentNullException("Тип_Модели");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Тип_Модели));
            }
            if ((Производитель == null)) {
                throw new global::System.ArgumentNullException("Производитель");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Производитель));
            }
            if ((Технические_Характеристики == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Технические_Характеристики));
            }
            if ((Особенности == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Особенности));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование_Модели, string Тип_Модели, string Производитель, string Технические_Характеристики, string Особенности, int Original_Код_модели, string Original_Наименование_Модели, string Original_Тип_Модели, string Original_Производитель, string Original_Технические_Характеристики, string Original_Особенности, int Код_модели) {
            if ((Наименование_Модели == null)) {
                throw new global::System.ArgumentNullException("Наименование_Модели");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Наименование_Модели));
            }
            if ((Тип_Модели == null)) {
                throw new global::System.ArgumentNullException("Тип_Модели");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Тип_Модели));
            }
            if ((Производитель == null)) {
                throw new global::System.ArgumentNullException("Производитель");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Производитель));
            }
            if ((Технические_Характеристики == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Технические_Характеристики));
            }
            if ((Особенности == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Особенности));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Код_модели));
            if ((Original_Наименование_Модели == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование_Модели");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Наименование_Модели));
            }
            if ((Original_Тип_Модели == null)) {
                throw new global::System.ArgumentNullException("Original_Тип_Модели");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Тип_Модели));
            }
            if ((Original_Производитель == null)) {
                throw new global::System.ArgumentNullException("Original_Производитель");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Производитель));
            }
            if ((Original_Технические_Характеристики == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Технические_Характеристики));
            }
            if ((Original_Особенности == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Особенности));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Код_модели));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование_Модели, string Тип_Модели, string Производитель, string Технические_Характеристики, string Особенности, int Original_Код_модели, string Original_Наименование_Модели, string Original_Тип_Модели, string Original_Производитель, string Original_Технические_Характеристики, string Original_Особенности) {
            return this.Update(Наименование_Модели, Тип_Модели, Производитель, Технические_Характеристики, Особенности, Original_Код_модели, Original_Наименование_Модели, Original_Тип_Модели, Original_Производитель, Original_Технические_Характеристики, Original_Особенности, Original_Код_модели);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class СотрудникTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public СотрудникTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Сотрудник";
            tableMapping.ColumnMappings.Add("Код_Сотрудника", "Код_Сотрудника");
            tableMapping.ColumnMappings.Add("Фамилия_Сотрудника", "Фамилия_Сотрудника");
            tableMapping.ColumnMappings.Add("Имя_Сотрудника", "Имя_Сотрудника");
            tableMapping.ColumnMappings.Add("Отчество_Сотрудника", "Отчество_Сотрудника");
            tableMapping.ColumnMappings.Add("Возраст", "Возраст");
            tableMapping.ColumnMappings.Add("Пол", "Пол");
            tableMapping.ColumnMappings.Add("Адрес_Проживания", "Адрес_Проживания");
            tableMapping.ColumnMappings.Add("Телефон_Сотрудника", "Телефон_Сотрудника");
            tableMapping.ColumnMappings.Add("Паспортные_Данные", "Паспортные_Данные");
            tableMapping.ColumnMappings.Add("Код_Должности", "Код_Должности");
            tableMapping.ColumnMappings.Add("Логин", "Логин");
            tableMapping.ColumnMappings.Add("Пароль", "Пароль");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Сотрудник] WHERE (([Код_Сотрудника] = @Original_Код_Сотрудника) AND ([Фамилия_Сотрудника] = @Original_Фамилия_Сотрудника) AND ([Имя_Сотрудника] = @Original_Имя_Сотрудника) AND ([Отчество_Сотрудника] = @Original_Отчество_Сотрудника) AND ([Возраст] = @Original_Возраст) AND ([Пол] = @Original_Пол) AND ([Адрес_Проживания] = @Original_Адрес_Проживания) AND ([Телефон_Сотрудника] = @Original_Телефон_Сотрудника) AND ([Паспортные_Данные] = @Original_Паспортные_Данные) AND ([Код_Должности] = @Original_Код_Должности) AND ([Логин] = @Original_Логин) AND ([Пароль] = @Original_Пароль))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Сотрудника", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Фамилия_Сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_Сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Имя_Сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_Сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Отчество_Сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_Сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Возраст", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Возраст", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пол", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пол", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Адрес_Проживания", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес_Проживания", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Телефон_Сотрудника", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_Сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Паспортные_Данные", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Паспортные_Данные", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Должности", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Должности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Логин", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Логин", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пароль", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пароль", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Сотрудник] ([Фамилия_Сотрудника], [Имя_Сотрудника], [Отчество_Сотрудника], [Возраст], [Пол], [Адрес_Проживания], [Телефон_Сотрудника], [Паспортные_Данные], [Код_Должности], [Логин], [Пароль]) VALUES (@Фамилия_Сотрудника, @Имя_Сотрудника, @Отчество_Сотрудника, @Возраст, @Пол, @Адрес_Проживания, @Телефон_Сотрудника, @Паспортные_Данные, @Код_Должности, @Логин, @Пароль);
SELECT Код_Сотрудника, Фамилия_Сотрудника, Имя_Сотрудника, Отчество_Сотрудника, Возраст, Пол, Адрес_Проживания, Телефон_Сотрудника, Паспортные_Данные, Код_Должности, Логин, Пароль FROM Сотрудник WHERE (Код_Сотрудника = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Фамилия_Сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_Сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Имя_Сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_Сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Отчество_Сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_Сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Возраст", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Возраст", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пол", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пол", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Адрес_Проживания", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес_Проживания", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Телефон_Сотрудника", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_Сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Паспортные_Данные", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Паспортные_Данные", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Должности", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Должности", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Логин", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Логин", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пароль", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пароль", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Сотрудник] SET [Фамилия_Сотрудника] = @Фамилия_Сотрудника, [Имя_Сотрудника] = @Имя_Сотрудника, [Отчество_Сотрудника] = @Отчество_Сотрудника, [Возраст] = @Возраст, [Пол] = @Пол, [Адрес_Проживания] = @Адрес_Проживания, [Телефон_Сотрудника] = @Телефон_Сотрудника, [Паспортные_Данные] = @Паспортные_Данные, [Код_Должности] = @Код_Должности, [Логин] = @Логин, [Пароль] = @Пароль WHERE (([Код_Сотрудника] = @Original_Код_Сотрудника) AND ([Фамилия_Сотрудника] = @Original_Фамилия_Сотрудника) AND ([Имя_Сотрудника] = @Original_Имя_Сотрудника) AND ([Отчество_Сотрудника] = @Original_Отчество_Сотрудника) AND ([Возраст] = @Original_Возраст) AND ([Пол] = @Original_Пол) AND ([Адрес_Проживания] = @Original_Адрес_Проживания) AND ([Телефон_Сотрудника] = @Original_Телефон_Сотрудника) AND ([Паспортные_Данные] = @Original_Паспортные_Данные) AND ([Код_Должности] = @Original_Код_Должности) AND ([Логин] = @Original_Логин) AND ([Пароль] = @Original_Пароль));
SELECT Код_Сотрудника, Фамилия_Сотрудника, Имя_Сотрудника, Отчество_Сотрудника, Возраст, Пол, Адрес_Проживания, Телефон_Сотрудника, Паспортные_Данные, Код_Должности, Логин, Пароль FROM Сотрудник WHERE (Код_Сотрудника = @Код_Сотрудника)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Фамилия_Сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_Сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Имя_Сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_Сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Отчество_Сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_Сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Возраст", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Возраст", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пол", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пол", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Адрес_Проживания", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес_Проживания", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Телефон_Сотрудника", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_Сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Паспортные_Данные", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Паспортные_Данные", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Должности", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Должности", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Логин", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Логин", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пароль", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пароль", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Сотрудника", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Фамилия_Сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_Сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Имя_Сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_Сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Отчество_Сотрудника", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_Сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Возраст", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Возраст", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пол", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пол", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Адрес_Проживания", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес_Проживания", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Телефон_Сотрудника", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Телефон_Сотрудника", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Паспортные_Данные", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Паспортные_Данные", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_Должности", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Должности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Логин", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Логин", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пароль", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пароль", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_Сотрудника", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Код_Сотрудника", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::СервисЦентр.Properties.Settings.Default.СервисЦентрConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Код_Сотрудника, Фамилия_Сотрудника, Имя_Сотрудника, Отчество_Сотрудника, В" +
                "озраст, Пол, Адрес_Проживания, Телефон_Сотрудника, Паспортные_Данные, Код_Должно" +
                "сти, Логин, Пароль FROM dbo.Сотрудник";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(СервисЦентрDataSet2.СотрудникDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual СервисЦентрDataSet2.СотрудникDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            СервисЦентрDataSet2.СотрудникDataTable dataTable = new СервисЦентрDataSet2.СотрудникDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(СервисЦентрDataSet2.СотрудникDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(СервисЦентрDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "Сотрудник");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Код_Сотрудника, string Original_Фамилия_Сотрудника, string Original_Имя_Сотрудника, string Original_Отчество_Сотрудника, int Original_Возраст, string Original_Пол, string Original_Адрес_Проживания, long Original_Телефон_Сотрудника, string Original_Паспортные_Данные, int Original_Код_Должности, string Original_Логин, string Original_Пароль) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Код_Сотрудника));
            if ((Original_Фамилия_Сотрудника == null)) {
                throw new global::System.ArgumentNullException("Original_Фамилия_Сотрудника");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Фамилия_Сотрудника));
            }
            if ((Original_Имя_Сотрудника == null)) {
                throw new global::System.ArgumentNullException("Original_Имя_Сотрудника");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Имя_Сотрудника));
            }
            if ((Original_Отчество_Сотрудника == null)) {
                throw new global::System.ArgumentNullException("Original_Отчество_Сотрудника");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Отчество_Сотрудника));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Возраст));
            if ((Original_Пол == null)) {
                throw new global::System.ArgumentNullException("Original_Пол");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Пол));
            }
            if ((Original_Адрес_Проживания == null)) {
                throw new global::System.ArgumentNullException("Original_Адрес_Проживания");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Адрес_Проживания));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((long)(Original_Телефон_Сотрудника));
            if ((Original_Паспортные_Данные == null)) {
                throw new global::System.ArgumentNullException("Original_Паспортные_Данные");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Паспортные_Данные));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_Код_Должности));
            if ((Original_Логин == null)) {
                throw new global::System.ArgumentNullException("Original_Логин");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Логин));
            }
            if ((Original_Пароль == null)) {
                throw new global::System.ArgumentNullException("Original_Пароль");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Пароль));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Фамилия_Сотрудника, string Имя_Сотрудника, string Отчество_Сотрудника, int Возраст, string Пол, string Адрес_Проживания, long Телефон_Сотрудника, string Паспортные_Данные, int Код_Должности, string Логин, string Пароль) {
            if ((Фамилия_Сотрудника == null)) {
                throw new global::System.ArgumentNullException("Фамилия_Сотрудника");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Фамилия_Сотрудника));
            }
            if ((Имя_Сотрудника == null)) {
                throw new global::System.ArgumentNullException("Имя_Сотрудника");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Имя_Сотрудника));
            }
            if ((Отчество_Сотрудника == null)) {
                throw new global::System.ArgumentNullException("Отчество_Сотрудника");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Отчество_Сотрудника));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Возраст));
            if ((Пол == null)) {
                throw new global::System.ArgumentNullException("Пол");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Пол));
            }
            if ((Адрес_Проживания == null)) {
                throw new global::System.ArgumentNullException("Адрес_Проживания");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Адрес_Проживания));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((long)(Телефон_Сотрудника));
            if ((Паспортные_Данные == null)) {
                throw new global::System.ArgumentNullException("Паспортные_Данные");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Паспортные_Данные));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Код_Должности));
            if ((Логин == null)) {
                throw new global::System.ArgumentNullException("Логин");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Логин));
            }
            if ((Пароль == null)) {
                throw new global::System.ArgumentNullException("Пароль");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Пароль));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Фамилия_Сотрудника, 
                    string Имя_Сотрудника, 
                    string Отчество_Сотрудника, 
                    int Возраст, 
                    string Пол, 
                    string Адрес_Проживания, 
                    long Телефон_Сотрудника, 
                    string Паспортные_Данные, 
                    int Код_Должности, 
                    string Логин, 
                    string Пароль, 
                    int Original_Код_Сотрудника, 
                    string Original_Фамилия_Сотрудника, 
                    string Original_Имя_Сотрудника, 
                    string Original_Отчество_Сотрудника, 
                    int Original_Возраст, 
                    string Original_Пол, 
                    string Original_Адрес_Проживания, 
                    long Original_Телефон_Сотрудника, 
                    string Original_Паспортные_Данные, 
                    int Original_Код_Должности, 
                    string Original_Логин, 
                    string Original_Пароль, 
                    int Код_Сотрудника) {
            if ((Фамилия_Сотрудника == null)) {
                throw new global::System.ArgumentNullException("Фамилия_Сотрудника");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Фамилия_Сотрудника));
            }
            if ((Имя_Сотрудника == null)) {
                throw new global::System.ArgumentNullException("Имя_Сотрудника");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Имя_Сотрудника));
            }
            if ((Отчество_Сотрудника == null)) {
                throw new global::System.ArgumentNullException("Отчество_Сотрудника");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Отчество_Сотрудника));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Возраст));
            if ((Пол == null)) {
                throw new global::System.ArgumentNullException("Пол");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Пол));
            }
            if ((Адрес_Проживания == null)) {
                throw new global::System.ArgumentNullException("Адрес_Проживания");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Адрес_Проживания));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(Телефон_Сотрудника));
            if ((Паспортные_Данные == null)) {
                throw new global::System.ArgumentNullException("Паспортные_Данные");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Паспортные_Данные));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Код_Должности));
            if ((Логин == null)) {
                throw new global::System.ArgumentNullException("Логин");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Логин));
            }
            if ((Пароль == null)) {
                throw new global::System.ArgumentNullException("Пароль");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Пароль));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_Код_Сотрудника));
            if ((Original_Фамилия_Сотрудника == null)) {
                throw new global::System.ArgumentNullException("Original_Фамилия_Сотрудника");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Фамилия_Сотрудника));
            }
            if ((Original_Имя_Сотрудника == null)) {
                throw new global::System.ArgumentNullException("Original_Имя_Сотрудника");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Имя_Сотрудника));
            }
            if ((Original_Отчество_Сотрудника == null)) {
                throw new global::System.ArgumentNullException("Original_Отчество_Сотрудника");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Отчество_Сотрудника));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_Возраст));
            if ((Original_Пол == null)) {
                throw new global::System.ArgumentNullException("Original_Пол");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Пол));
            }
            if ((Original_Адрес_Проживания == null)) {
                throw new global::System.ArgumentNullException("Original_Адрес_Проживания");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Адрес_Проживания));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((long)(Original_Телефон_Сотрудника));
            if ((Original_Паспортные_Данные == null)) {
                throw new global::System.ArgumentNullException("Original_Паспортные_Данные");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Паспортные_Данные));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_Код_Должности));
            if ((Original_Логин == null)) {
                throw new global::System.ArgumentNullException("Original_Логин");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Логин));
            }
            if ((Original_Пароль == null)) {
                throw new global::System.ArgumentNullException("Original_Пароль");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Пароль));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Код_Сотрудника));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Фамилия_Сотрудника, 
                    string Имя_Сотрудника, 
                    string Отчество_Сотрудника, 
                    int Возраст, 
                    string Пол, 
                    string Адрес_Проживания, 
                    long Телефон_Сотрудника, 
                    string Паспортные_Данные, 
                    int Код_Должности, 
                    string Логин, 
                    string Пароль, 
                    int Original_Код_Сотрудника, 
                    string Original_Фамилия_Сотрудника, 
                    string Original_Имя_Сотрудника, 
                    string Original_Отчество_Сотрудника, 
                    int Original_Возраст, 
                    string Original_Пол, 
                    string Original_Адрес_Проживания, 
                    long Original_Телефон_Сотрудника, 
                    string Original_Паспортные_Данные, 
                    int Original_Код_Должности, 
                    string Original_Логин, 
                    string Original_Пароль) {
            return this.Update(Фамилия_Сотрудника, Имя_Сотрудника, Отчество_Сотрудника, Возраст, Пол, Адрес_Проживания, Телефон_Сотрудника, Паспортные_Данные, Код_Должности, Логин, Пароль, Original_Код_Сотрудника, Original_Фамилия_Сотрудника, Original_Имя_Сотрудника, Original_Отчество_Сотрудника, Original_Возраст, Original_Пол, Original_Адрес_Проживания, Original_Телефон_Сотрудника, Original_Паспортные_Данные, Original_Код_Должности, Original_Логин, Original_Пароль, Original_Код_Сотрудника);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private Вид_НеисправностиTableAdapter _вид_НеисправностиTableAdapter;
        
        private ДолжностьTableAdapter _должностьTableAdapter;
        
        private ЗаказTableAdapter _заказTableAdapter;
        
        private ЗапчастьTableAdapter _запчастьTableAdapter;
        
        private Обсуживаемый_МагазинTableAdapter _обсуживаемый_МагазинTableAdapter;
        
        private Ремонтируемая_МодельTableAdapter _ремонтируемая_МодельTableAdapter;
        
        private СотрудникTableAdapter _сотрудникTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Вид_НеисправностиTableAdapter Вид_НеисправностиTableAdapter {
            get {
                return this._вид_НеисправностиTableAdapter;
            }
            set {
                this._вид_НеисправностиTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ДолжностьTableAdapter ДолжностьTableAdapter {
            get {
                return this._должностьTableAdapter;
            }
            set {
                this._должностьTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ЗаказTableAdapter ЗаказTableAdapter {
            get {
                return this._заказTableAdapter;
            }
            set {
                this._заказTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ЗапчастьTableAdapter ЗапчастьTableAdapter {
            get {
                return this._запчастьTableAdapter;
            }
            set {
                this._запчастьTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Обсуживаемый_МагазинTableAdapter Обсуживаемый_МагазинTableAdapter {
            get {
                return this._обсуживаемый_МагазинTableAdapter;
            }
            set {
                this._обсуживаемый_МагазинTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Ремонтируемая_МодельTableAdapter Ремонтируемая_МодельTableAdapter {
            get {
                return this._ремонтируемая_МодельTableAdapter;
            }
            set {
                this._ремонтируемая_МодельTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public СотрудникTableAdapter СотрудникTableAdapter {
            get {
                return this._сотрудникTableAdapter;
            }
            set {
                this._сотрудникTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._вид_НеисправностиTableAdapter != null) 
                            && (this._вид_НеисправностиTableAdapter.Connection != null))) {
                    return this._вид_НеисправностиTableAdapter.Connection;
                }
                if (((this._должностьTableAdapter != null) 
                            && (this._должностьTableAdapter.Connection != null))) {
                    return this._должностьTableAdapter.Connection;
                }
                if (((this._заказTableAdapter != null) 
                            && (this._заказTableAdapter.Connection != null))) {
                    return this._заказTableAdapter.Connection;
                }
                if (((this._запчастьTableAdapter != null) 
                            && (this._запчастьTableAdapter.Connection != null))) {
                    return this._запчастьTableAdapter.Connection;
                }
                if (((this._обсуживаемый_МагазинTableAdapter != null) 
                            && (this._обсуживаемый_МагазинTableAdapter.Connection != null))) {
                    return this._обсуживаемый_МагазинTableAdapter.Connection;
                }
                if (((this._ремонтируемая_МодельTableAdapter != null) 
                            && (this._ремонтируемая_МодельTableAdapter.Connection != null))) {
                    return this._ремонтируемая_МодельTableAdapter.Connection;
                }
                if (((this._сотрудникTableAdapter != null) 
                            && (this._сотрудникTableAdapter.Connection != null))) {
                    return this._сотрудникTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._вид_НеисправностиTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._должностьTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._заказTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._запчастьTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._обсуживаемый_МагазинTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._ремонтируемая_МодельTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._сотрудникTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(СервисЦентрDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._должностьTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Должность.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._должностьTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._запчастьTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Запчасть.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._запчастьTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._ремонтируемая_МодельTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Ремонтируемая_Модель.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._ремонтируемая_МодельTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._вид_НеисправностиTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Вид_Неисправности.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._вид_НеисправностиTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._обсуживаемый_МагазинTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Обсуживаемый_Магазин.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._обсуживаемый_МагазинTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._сотрудникTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Сотрудник.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._сотрудникTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._заказTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Заказ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._заказTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(СервисЦентрDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._должностьTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Должность.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._должностьTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._запчастьTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Запчасть.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._запчастьTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._ремонтируемая_МодельTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Ремонтируемая_Модель.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._ремонтируемая_МодельTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._вид_НеисправностиTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Вид_Неисправности.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._вид_НеисправностиTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._обсуживаемый_МагазинTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Обсуживаемый_Магазин.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._обсуживаемый_МагазинTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._сотрудникTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Сотрудник.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._сотрудникTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._заказTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Заказ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._заказTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(СервисЦентрDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._заказTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Заказ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._заказTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._сотрудникTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Сотрудник.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._сотрудникTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._обсуживаемый_МагазинTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Обсуживаемый_Магазин.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._обсуживаемый_МагазинTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._вид_НеисправностиTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Вид_Неисправности.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._вид_НеисправностиTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._ремонтируемая_МодельTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Ремонтируемая_Модель.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._ремонтируемая_МодельTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._запчастьTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Запчасть.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._запчастьTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._должностьTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Должность.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._должностьTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(СервисЦентрDataSet2 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._вид_НеисправностиTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._вид_НеисправностиTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._должностьTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._должностьTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._заказTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._заказTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._запчастьTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._запчастьTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._обсуживаемый_МагазинTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._обсуживаемый_МагазинTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._ремонтируемая_МодельTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._ремонтируемая_МодельTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._сотрудникTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._сотрудникTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._вид_НеисправностиTableAdapter != null)) {
                    revertConnections.Add(this._вид_НеисправностиTableAdapter, this._вид_НеисправностиTableAdapter.Connection);
                    this._вид_НеисправностиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._вид_НеисправностиTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._вид_НеисправностиTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._вид_НеисправностиTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._вид_НеисправностиTableAdapter.Adapter);
                    }
                }
                if ((this._должностьTableAdapter != null)) {
                    revertConnections.Add(this._должностьTableAdapter, this._должностьTableAdapter.Connection);
                    this._должностьTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._должностьTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._должностьTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._должностьTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._должностьTableAdapter.Adapter);
                    }
                }
                if ((this._заказTableAdapter != null)) {
                    revertConnections.Add(this._заказTableAdapter, this._заказTableAdapter.Connection);
                    this._заказTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._заказTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._заказTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._заказTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._заказTableAdapter.Adapter);
                    }
                }
                if ((this._запчастьTableAdapter != null)) {
                    revertConnections.Add(this._запчастьTableAdapter, this._запчастьTableAdapter.Connection);
                    this._запчастьTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._запчастьTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._запчастьTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._запчастьTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._запчастьTableAdapter.Adapter);
                    }
                }
                if ((this._обсуживаемый_МагазинTableAdapter != null)) {
                    revertConnections.Add(this._обсуживаемый_МагазинTableAdapter, this._обсуживаемый_МагазинTableAdapter.Connection);
                    this._обсуживаемый_МагазинTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._обсуживаемый_МагазинTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._обсуживаемый_МагазинTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._обсуживаемый_МагазинTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._обсуживаемый_МагазинTableAdapter.Adapter);
                    }
                }
                if ((this._ремонтируемая_МодельTableAdapter != null)) {
                    revertConnections.Add(this._ремонтируемая_МодельTableAdapter, this._ремонтируемая_МодельTableAdapter.Connection);
                    this._ремонтируемая_МодельTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._ремонтируемая_МодельTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._ремонтируемая_МодельTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._ремонтируемая_МодельTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._ремонтируемая_МодельTableAdapter.Adapter);
                    }
                }
                if ((this._сотрудникTableAdapter != null)) {
                    revertConnections.Add(this._сотрудникTableAdapter, this._сотрудникTableAdapter.Connection);
                    this._сотрудникTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._сотрудникTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._сотрудникTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._сотрудникTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._сотрудникTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._вид_НеисправностиTableAdapter != null)) {
                    this._вид_НеисправностиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._вид_НеисправностиTableAdapter]));
                    this._вид_НеисправностиTableAdapter.Transaction = null;
                }
                if ((this._должностьTableAdapter != null)) {
                    this._должностьTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._должностьTableAdapter]));
                    this._должностьTableAdapter.Transaction = null;
                }
                if ((this._заказTableAdapter != null)) {
                    this._заказTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._заказTableAdapter]));
                    this._заказTableAdapter.Transaction = null;
                }
                if ((this._запчастьTableAdapter != null)) {
                    this._запчастьTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._запчастьTableAdapter]));
                    this._запчастьTableAdapter.Transaction = null;
                }
                if ((this._обсуживаемый_МагазинTableAdapter != null)) {
                    this._обсуживаемый_МагазинTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._обсуживаемый_МагазинTableAdapter]));
                    this._обсуживаемый_МагазинTableAdapter.Transaction = null;
                }
                if ((this._ремонтируемая_МодельTableAdapter != null)) {
                    this._ремонтируемая_МодельTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._ремонтируемая_МодельTableAdapter]));
                    this._ремонтируемая_МодельTableAdapter.Transaction = null;
                }
                if ((this._сотрудникTableAdapter != null)) {
                    this._сотрудникTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._сотрудникTableAdapter]));
                    this._сотрудникTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591